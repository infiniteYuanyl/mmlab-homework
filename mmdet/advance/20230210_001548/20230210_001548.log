2023/02/10 00:15:56 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.7.0 (default, Oct  9 2018, 10:31:47) [GCC 7.3.0]
    CUDA available: True
    numpy_random_seed: 515879102
    GPU 0,1: NVIDIA GeForce RTX 3090
    CUDA_HOME: /data/apps/cuda/11.1
    NVCC: Cuda compilation tools, release 11.1, V11.1.74
    GCC: gcc (GCC) 7.3.0
    PyTorch: 1.8.0+cu111
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.9.0+cu111
    OpenCV: 4.7.0
    MMEngine: 0.5.0

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: slurm
    Distributed training: True
    GPU number: 2
------------------------------------------------------------

2023/02/10 00:15:56 - mmengine - INFO - Config:
model = dict(
    type='FasterRCNN',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_size_divisor=32),
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=20,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'VOCDataset'
data_root = 'data/VOCdevkit/'
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', scale=(600, 400), keep_ratio=True),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(type='Resize', scale=(600, 400), keep_ratio=True),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=16,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    dataset=dict(
        type='VOCDataset',
        data_root='data/VOCdevkit/',
        ann_file='VOC2012/ImageSets/Main/train.txt',
        data_prefix=dict(sub_data_root='VOC2012/'),
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', scale=(600, 400), keep_ratio=True),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PackDetInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='VOCDataset',
        data_root='data/VOCdevkit/',
        ann_file='VOC2012/ImageSets/Main/val.txt',
        data_prefix=dict(sub_data_root='VOC2012/'),
        test_mode=True,
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='Resize', scale=(600, 400), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='VOCDataset',
        data_root='data/VOCdevkit/',
        ann_file='VOC2012/ImageSets/Main/val.txt',
        data_prefix=dict(sub_data_root='VOC2012/'),
        test_mode=True,
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='Resize', scale=(600, 400), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ]))
val_evaluator = dict(type='VOCMetric', metric='mAP', eval_mode='11points')
test_evaluator = dict(type='VOCMetric', metric='mAP', eval_mode='11points')
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=5),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'checkpoints/faster_rcnn_r50_fpn_1x_voc0712_20220320_192712-54bef0f3.pth'
resume = False
max_epochs = 100
train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=100, val_interval=10)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='MultiStepLR',
        begin=0,
        end=100,
        by_epoch=True,
        milestones=[3],
        gamma=0.1)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.002, momentum=0.9, weight_decay=0.0001))
auto_scale_lr = dict(enable=False, base_batch_size=32)
launcher = 'slurm'
work_dir = 'faster'

2023/02/10 00:15:56 - mmengine - WARNING - The "visualizer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:56 - mmengine - WARNING - The "vis_backend" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - WARNING - The "model" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - WARNING - The "task util" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - WARNING - The "hook" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/02/10 00:15:58 - mmengine - WARNING - The "loop" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - WARNING - The "dataset" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:15:58 - mmengine - WARNING - The "transform" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:15 - mmengine - WARNING - The "data sampler" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:15 - mmengine - WARNING - The "optimizer constructor" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:15 - mmengine - WARNING - The "optimizer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:15 - mmengine - WARNING - The "optim_wrapper" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:15 - mmengine - WARNING - The "parameter scheduler" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:33 - mmengine - WARNING - The "metric" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/10 00:16:33 - mmengine - WARNING - The "weight initializer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([21, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([80, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([80]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2023/02/10 00:16:33 - mmengine - INFO - Load checkpoint from checkpoints/faster_rcnn_r50_fpn_1x_voc0712_20220320_192712-54bef0f3.pth
2023/02/10 00:16:33 - mmengine - INFO - Checkpoints will be saved to /data/run01/scz0bbc/mmdetection-3.0.0rc5/faster.
2023/02/10 00:17:12 - mmengine - INFO - Epoch(train)   [1][ 50/179]  lr: 2.0000e-03  eta: 3:49:58  time: 0.7730  data_time: 0.0212  memory: 6893  loss: 0.2859  loss_rpn_cls: 0.0155  loss_rpn_bbox: 0.0121  loss_cls: 0.1053  acc: 97.1436  loss_bbox: 0.1530
2023/02/10 00:17:50 - mmengine - INFO - Epoch(train)   [1][100/179]  lr: 2.0000e-03  eta: 3:46:18  time: 0.7527  data_time: 0.0127  memory: 6893  loss: 0.2881  loss_rpn_cls: 0.0139  loss_rpn_bbox: 0.0130  loss_cls: 0.1038  acc: 96.6675  loss_bbox: 0.1575
2023/02/10 00:18:27 - mmengine - INFO - Epoch(train)   [1][150/179]  lr: 2.0000e-03  eta: 3:44:16  time: 0.7485  data_time: 0.0125  memory: 6893  loss: 0.3012  loss_rpn_cls: 0.0158  loss_rpn_bbox: 0.0128  loss_cls: 0.1113  acc: 94.2139  loss_bbox: 0.1613
2023/02/10 00:18:48 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:19:26 - mmengine - INFO - Epoch(train)   [2][ 50/179]  lr: 2.0000e-03  eta: 3:41:24  time: 0.7445  data_time: 0.0147  memory: 6893  loss: 0.2810  loss_rpn_cls: 0.0125  loss_rpn_bbox: 0.0123  loss_cls: 0.1006  acc: 95.9229  loss_bbox: 0.1555
2023/02/10 00:20:03 - mmengine - INFO - Epoch(train)   [2][100/179]  lr: 2.0000e-03  eta: 3:40:27  time: 0.7456  data_time: 0.0132  memory: 6893  loss: 0.2887  loss_rpn_cls: 0.0134  loss_rpn_bbox: 0.0126  loss_cls: 0.1031  acc: 95.9106  loss_bbox: 0.1597
2023/02/10 00:20:40 - mmengine - INFO - Epoch(train)   [2][150/179]  lr: 2.0000e-03  eta: 3:39:36  time: 0.7457  data_time: 0.0133  memory: 6893  loss: 0.2611  loss_rpn_cls: 0.0105  loss_rpn_bbox: 0.0115  loss_cls: 0.0943  acc: 95.5688  loss_bbox: 0.1448
2023/02/10 00:21:02 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:21:39 - mmengine - INFO - Epoch(train)   [3][ 50/179]  lr: 2.0000e-03  eta: 3:38:14  time: 0.7430  data_time: 0.0149  memory: 9752  loss: 0.2691  loss_rpn_cls: 0.0108  loss_rpn_bbox: 0.0114  loss_cls: 0.0946  acc: 95.2148  loss_bbox: 0.1522
2023/02/10 00:22:16 - mmengine - INFO - Epoch(train)   [3][100/179]  lr: 2.0000e-03  eta: 3:37:21  time: 0.7405  data_time: 0.0128  memory: 6893  loss: 0.3048  loss_rpn_cls: 0.0134  loss_rpn_bbox: 0.0139  loss_cls: 0.1075  acc: 96.3013  loss_bbox: 0.1699
2023/02/10 00:22:53 - mmengine - INFO - Epoch(train)   [3][150/179]  lr: 2.0000e-03  eta: 3:36:39  time: 0.7449  data_time: 0.0129  memory: 6893  loss: 0.2744  loss_rpn_cls: 0.0115  loss_rpn_bbox: 0.0121  loss_cls: 0.0970  acc: 96.2280  loss_bbox: 0.1538
2023/02/10 00:23:15 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:23:52 - mmengine - INFO - Epoch(train)   [4][ 50/179]  lr: 2.0000e-04  eta: 3:35:28  time: 0.7454  data_time: 0.0154  memory: 6919  loss: 0.2602  loss_rpn_cls: 0.0103  loss_rpn_bbox: 0.0119  loss_cls: 0.0911  acc: 97.6685  loss_bbox: 0.1468
2023/02/10 00:24:29 - mmengine - INFO - Epoch(train)   [4][100/179]  lr: 2.0000e-04  eta: 3:34:48  time: 0.7446  data_time: 0.0138  memory: 6894  loss: 0.2560  loss_rpn_cls: 0.0093  loss_rpn_bbox: 0.0114  loss_cls: 0.0882  acc: 96.4233  loss_bbox: 0.1471
2023/02/10 00:25:06 - mmengine - INFO - Epoch(train)   [4][150/179]  lr: 2.0000e-04  eta: 3:34:14  time: 0.7491  data_time: 0.0137  memory: 6893  loss: 0.2733  loss_rpn_cls: 0.0113  loss_rpn_bbox: 0.0128  loss_cls: 0.0948  acc: 96.9360  loss_bbox: 0.1543
2023/02/10 00:25:28 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:26:05 - mmengine - INFO - Epoch(train)   [5][ 50/179]  lr: 2.0000e-04  eta: 3:33:13  time: 0.7470  data_time: 0.0162  memory: 6894  loss: 0.2658  loss_rpn_cls: 0.0103  loss_rpn_bbox: 0.0121  loss_cls: 0.0933  acc: 95.0928  loss_bbox: 0.1500
2023/02/10 00:26:43 - mmengine - INFO - Epoch(train)   [5][100/179]  lr: 2.0000e-04  eta: 3:32:32  time: 0.7427  data_time: 0.0140  memory: 6893  loss: 0.2638  loss_rpn_cls: 0.0113  loss_rpn_bbox: 0.0124  loss_cls: 0.0910  acc: 97.5464  loss_bbox: 0.1491
2023/02/10 00:27:20 - mmengine - INFO - Epoch(train)   [5][150/179]  lr: 2.0000e-04  eta: 3:31:54  time: 0.7461  data_time: 0.0139  memory: 6893  loss: 0.2676  loss_rpn_cls: 0.0107  loss_rpn_bbox: 0.0112  loss_cls: 0.0933  acc: 97.5464  loss_bbox: 0.1525
2023/02/10 00:27:41 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:27:41 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/02/10 00:28:20 - mmengine - INFO - Epoch(train)   [6][ 50/179]  lr: 2.0000e-04  eta: 3:30:55  time: 0.7490  data_time: 0.0153  memory: 6893  loss: 0.2638  loss_rpn_cls: 0.0107  loss_rpn_bbox: 0.0123  loss_cls: 0.0913  acc: 97.7539  loss_bbox: 0.1495
2023/02/10 00:28:57 - mmengine - INFO - Epoch(train)   [6][100/179]  lr: 2.0000e-04  eta: 3:30:12  time: 0.7395  data_time: 0.0138  memory: 6893  loss: 0.2722  loss_rpn_cls: 0.0104  loss_rpn_bbox: 0.0121  loss_cls: 0.0949  acc: 95.1416  loss_bbox: 0.1548
2023/02/10 00:29:00 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:29:34 - mmengine - INFO - Epoch(train)   [6][150/179]  lr: 2.0000e-04  eta: 3:29:29  time: 0.7399  data_time: 0.0136  memory: 6893  loss: 0.2580  loss_rpn_cls: 0.0094  loss_rpn_bbox: 0.0113  loss_cls: 0.0904  acc: 94.6777  loss_bbox: 0.1468
2023/02/10 00:29:55 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:30:33 - mmengine - INFO - Epoch(train)   [7][ 50/179]  lr: 2.0000e-04  eta: 3:28:27  time: 0.7487  data_time: 0.0161  memory: 6893  loss: 0.2541  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0111  loss_cls: 0.0880  acc: 97.0581  loss_bbox: 0.1459
2023/02/10 00:31:10 - mmengine - INFO - Epoch(train)   [7][100/179]  lr: 2.0000e-04  eta: 3:27:53  time: 0.7503  data_time: 0.0138  memory: 6893  loss: 0.2626  loss_rpn_cls: 0.0098  loss_rpn_bbox: 0.0118  loss_cls: 0.0921  acc: 95.7520  loss_bbox: 0.1490
2023/02/10 00:31:48 - mmengine - INFO - Epoch(train)   [7][150/179]  lr: 2.0000e-04  eta: 3:27:19  time: 0.7495  data_time: 0.0136  memory: 6893  loss: 0.2567  loss_rpn_cls: 0.0095  loss_rpn_bbox: 0.0115  loss_cls: 0.0887  acc: 96.8018  loss_bbox: 0.1469
2023/02/10 00:32:09 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:32:47 - mmengine - INFO - Epoch(train)   [8][ 50/179]  lr: 2.0000e-04  eta: 3:26:26  time: 0.7577  data_time: 0.0158  memory: 9752  loss: 0.2593  loss_rpn_cls: 0.0099  loss_rpn_bbox: 0.0122  loss_cls: 0.0896  acc: 97.7539  loss_bbox: 0.1476
2023/02/10 00:33:24 - mmengine - INFO - Epoch(train)   [8][100/179]  lr: 2.0000e-04  eta: 3:25:51  time: 0.7503  data_time: 0.0136  memory: 6894  loss: 0.2500  loss_rpn_cls: 0.0100  loss_rpn_bbox: 0.0115  loss_cls: 0.0867  acc: 94.5557  loss_bbox: 0.1418
2023/02/10 00:34:02 - mmengine - INFO - Epoch(train)   [8][150/179]  lr: 2.0000e-04  eta: 3:25:11  time: 0.7419  data_time: 0.0137  memory: 6893  loss: 0.2598  loss_rpn_cls: 0.0100  loss_rpn_bbox: 0.0117  loss_cls: 0.0896  acc: 95.5811  loss_bbox: 0.1485
2023/02/10 00:34:23 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:35:00 - mmengine - INFO - Epoch(train)   [9][ 50/179]  lr: 2.0000e-04  eta: 3:24:11  time: 0.7468  data_time: 0.0167  memory: 6919  loss: 0.2633  loss_rpn_cls: 0.0105  loss_rpn_bbox: 0.0127  loss_cls: 0.0910  acc: 97.3511  loss_bbox: 0.1491
2023/02/10 00:35:38 - mmengine - INFO - Epoch(train)   [9][100/179]  lr: 2.0000e-04  eta: 3:23:36  time: 0.7493  data_time: 0.0136  memory: 6893  loss: 0.2632  loss_rpn_cls: 0.0109  loss_rpn_bbox: 0.0119  loss_cls: 0.0908  acc: 96.6431  loss_bbox: 0.1496
2023/02/10 00:36:15 - mmengine - INFO - Epoch(train)   [9][150/179]  lr: 2.0000e-04  eta: 3:22:59  time: 0.7483  data_time: 0.0139  memory: 6893  loss: 0.2701  loss_rpn_cls: 0.0107  loss_rpn_bbox: 0.0125  loss_cls: 0.0941  acc: 96.8872  loss_bbox: 0.1528
2023/02/10 00:36:37 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:37:15 - mmengine - INFO - Epoch(train)  [10][ 50/179]  lr: 2.0000e-04  eta: 3:22:05  time: 0.7578  data_time: 0.0156  memory: 6919  loss: 0.2591  loss_rpn_cls: 0.0101  loss_rpn_bbox: 0.0116  loss_cls: 0.0886  acc: 95.8618  loss_bbox: 0.1488
2023/02/10 00:37:52 - mmengine - INFO - Epoch(train)  [10][100/179]  lr: 2.0000e-04  eta: 3:21:27  time: 0.7447  data_time: 0.0140  memory: 6893  loss: 0.2543  loss_rpn_cls: 0.0107  loss_rpn_bbox: 0.0121  loss_cls: 0.0873  acc: 96.0938  loss_bbox: 0.1443
2023/02/10 00:38:29 - mmengine - INFO - Epoch(train)  [10][150/179]  lr: 2.0000e-04  eta: 3:20:49  time: 0.7468  data_time: 0.0137  memory: 6893  loss: 0.2587  loss_rpn_cls: 0.0097  loss_rpn_bbox: 0.0120  loss_cls: 0.0896  acc: 96.0205  loss_bbox: 0.1474
2023/02/10 00:38:51 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:38:51 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/02/10 00:38:54 - mmengine - INFO - Epoch(val)  [10][  50/2912]    eta: 0:02:30  time: 0.0526  data_time: 0.0306  memory: 6919  
2023/02/10 00:38:56 - mmengine - INFO - Epoch(val)  [10][ 100/2912]    eta: 0:01:50  time: 0.0259  data_time: 0.0049  memory: 760  
2023/02/10 00:38:57 - mmengine - INFO - Epoch(val)  [10][ 150/2912]    eta: 0:01:42  time: 0.0332  data_time: 0.0126  memory: 762  
2023/02/10 00:39:01 - mmengine - INFO - Epoch(val)  [10][ 200/2912]    eta: 0:02:02  time: 0.0695  data_time: 0.0485  memory: 760  
2023/02/10 00:39:02 - mmengine - INFO - Epoch(val)  [10][ 250/2912]    eta: 0:01:48  time: 0.0227  data_time: 0.0014  memory: 762  
2023/02/10 00:39:03 - mmengine - INFO - Epoch(val)  [10][ 300/2912]    eta: 0:01:40  time: 0.0262  data_time: 0.0059  memory: 762  
2023/02/10 00:39:05 - mmengine - INFO - Epoch(val)  [10][ 350/2912]    eta: 0:01:34  time: 0.0268  data_time: 0.0060  memory: 760  
2023/02/10 00:39:06 - mmengine - INFO - Epoch(val)  [10][ 400/2912]    eta: 0:01:29  time: 0.0283  data_time: 0.0065  memory: 762  
2023/02/10 00:39:07 - mmengine - INFO - Epoch(val)  [10][ 450/2912]    eta: 0:01:24  time: 0.0253  data_time: 0.0038  memory: 762  
2023/02/10 00:39:09 - mmengine - INFO - Epoch(val)  [10][ 500/2912]    eta: 0:01:21  time: 0.0283  data_time: 0.0068  memory: 762  
2023/02/10 00:39:10 - mmengine - INFO - Epoch(val)  [10][ 550/2912]    eta: 0:01:17  time: 0.0224  data_time: 0.0016  memory: 762  
2023/02/10 00:39:11 - mmengine - INFO - Epoch(val)  [10][ 600/2912]    eta: 0:01:14  time: 0.0241  data_time: 0.0027  memory: 762  
2023/02/10 00:39:12 - mmengine - INFO - Epoch(val)  [10][ 650/2912]    eta: 0:01:11  time: 0.0234  data_time: 0.0020  memory: 760  
2023/02/10 00:39:13 - mmengine - INFO - Epoch(val)  [10][ 700/2912]    eta: 0:01:08  time: 0.0242  data_time: 0.0025  memory: 761  
2023/02/10 00:39:15 - mmengine - INFO - Epoch(val)  [10][ 750/2912]    eta: 0:01:05  time: 0.0242  data_time: 0.0023  memory: 761  
2023/02/10 00:39:16 - mmengine - INFO - Epoch(val)  [10][ 800/2912]    eta: 0:01:03  time: 0.0239  data_time: 0.0017  memory: 761  
2023/02/10 00:39:17 - mmengine - INFO - Epoch(val)  [10][ 850/2912]    eta: 0:01:01  time: 0.0238  data_time: 0.0017  memory: 762  
2023/02/10 00:39:18 - mmengine - INFO - Epoch(val)  [10][ 900/2912]    eta: 0:00:59  time: 0.0234  data_time: 0.0017  memory: 761  
2023/02/10 00:39:19 - mmengine - INFO - Epoch(val)  [10][ 950/2912]    eta: 0:00:56  time: 0.0232  data_time: 0.0016  memory: 761  
2023/02/10 00:39:21 - mmengine - INFO - Epoch(val)  [10][1000/2912]    eta: 0:00:55  time: 0.0269  data_time: 0.0054  memory: 761  
2023/02/10 00:39:22 - mmengine - INFO - Epoch(val)  [10][1050/2912]    eta: 0:00:54  time: 0.0353  data_time: 0.0136  memory: 762  
2023/02/10 00:39:24 - mmengine - INFO - Epoch(val)  [10][1100/2912]    eta: 0:00:53  time: 0.0331  data_time: 0.0117  memory: 760  
2023/02/10 00:39:25 - mmengine - INFO - Epoch(val)  [10][1150/2912]    eta: 0:00:51  time: 0.0252  data_time: 0.0032  memory: 761  
2023/02/10 00:39:27 - mmengine - INFO - Epoch(val)  [10][1200/2912]    eta: 0:00:50  time: 0.0303  data_time: 0.0083  memory: 761  
2023/02/10 00:39:28 - mmengine - INFO - Epoch(val)  [10][1250/2912]    eta: 0:00:48  time: 0.0277  data_time: 0.0060  memory: 762  
2023/02/10 00:39:30 - mmengine - INFO - Epoch(val)  [10][1300/2912]    eta: 0:00:47  time: 0.0292  data_time: 0.0073  memory: 762  
2023/02/10 00:39:31 - mmengine - INFO - Epoch(val)  [10][1350/2912]    eta: 0:00:45  time: 0.0251  data_time: 0.0034  memory: 761  
2023/02/10 00:39:32 - mmengine - INFO - Epoch(val)  [10][1400/2912]    eta: 0:00:43  time: 0.0302  data_time: 0.0091  memory: 762  
2023/02/10 00:39:35 - mmengine - INFO - Epoch(val)  [10][1450/2912]    eta: 0:00:43  time: 0.0431  data_time: 0.0217  memory: 761  
2023/02/10 00:39:36 - mmengine - INFO - Epoch(val)  [10][1500/2912]    eta: 0:00:41  time: 0.0332  data_time: 0.0126  memory: 760  
2023/02/10 00:39:38 - mmengine - INFO - Epoch(val)  [10][1550/2912]    eta: 0:00:40  time: 0.0423  data_time: 0.0214  memory: 760  
2023/02/10 00:39:40 - mmengine - INFO - Epoch(val)  [10][1600/2912]    eta: 0:00:39  time: 0.0403  data_time: 0.0191  memory: 762  
2023/02/10 00:39:43 - mmengine - INFO - Epoch(val)  [10][1650/2912]    eta: 0:00:38  time: 0.0458  data_time: 0.0241  memory: 761  
2023/02/10 00:39:45 - mmengine - INFO - Epoch(val)  [10][1700/2912]    eta: 0:00:37  time: 0.0405  data_time: 0.0193  memory: 761  
2023/02/10 00:39:47 - mmengine - INFO - Epoch(val)  [10][1750/2912]    eta: 0:00:36  time: 0.0446  data_time: 0.0227  memory: 761  
2023/02/10 00:39:51 - mmengine - INFO - Epoch(val)  [10][1800/2912]    eta: 0:00:36  time: 0.0720  data_time: 0.0502  memory: 761  
2023/02/10 00:39:53 - mmengine - INFO - Epoch(val)  [10][1850/2912]    eta: 0:00:35  time: 0.0574  data_time: 0.0360  memory: 761  
2023/02/10 00:39:55 - mmengine - INFO - Epoch(val)  [10][1900/2912]    eta: 0:00:33  time: 0.0362  data_time: 0.0148  memory: 760  
2023/02/10 00:39:57 - mmengine - INFO - Epoch(val)  [10][1950/2912]    eta: 0:00:32  time: 0.0336  data_time: 0.0127  memory: 761  
2023/02/10 00:39:59 - mmengine - INFO - Epoch(val)  [10][2000/2912]    eta: 0:00:30  time: 0.0324  data_time: 0.0113  memory: 761  
2023/02/10 00:40:01 - mmengine - INFO - Epoch(val)  [10][2050/2912]    eta: 0:00:29  time: 0.0438  data_time: 0.0225  memory: 761  
2023/02/10 00:40:02 - mmengine - INFO - Epoch(val)  [10][2100/2912]    eta: 0:00:27  time: 0.0311  data_time: 0.0099  memory: 762  
2023/02/10 00:40:04 - mmengine - INFO - Epoch(val)  [10][2150/2912]    eta: 0:00:25  time: 0.0424  data_time: 0.0213  memory: 761  
2023/02/10 00:40:06 - mmengine - INFO - Epoch(val)  [10][2200/2912]    eta: 0:00:23  time: 0.0288  data_time: 0.0078  memory: 760  
2023/02/10 00:40:08 - mmengine - INFO - Epoch(val)  [10][2250/2912]    eta: 0:00:22  time: 0.0360  data_time: 0.0151  memory: 760  
2023/02/10 00:40:09 - mmengine - INFO - Epoch(val)  [10][2300/2912]    eta: 0:00:20  time: 0.0259  data_time: 0.0048  memory: 761  
2023/02/10 00:40:11 - mmengine - INFO - Epoch(val)  [10][2350/2912]    eta: 0:00:18  time: 0.0368  data_time: 0.0160  memory: 760  
2023/02/10 00:40:12 - mmengine - INFO - Epoch(val)  [10][2400/2912]    eta: 0:00:17  time: 0.0224  data_time: 0.0013  memory: 761  
2023/02/10 00:40:13 - mmengine - INFO - Epoch(val)  [10][2450/2912]    eta: 0:00:15  time: 0.0221  data_time: 0.0012  memory: 760  
2023/02/10 00:40:14 - mmengine - INFO - Epoch(val)  [10][2500/2912]    eta: 0:00:13  time: 0.0222  data_time: 0.0012  memory: 761  
2023/02/10 00:40:15 - mmengine - INFO - Epoch(val)  [10][2550/2912]    eta: 0:00:11  time: 0.0231  data_time: 0.0023  memory: 760  
2023/02/10 00:40:16 - mmengine - INFO - Epoch(val)  [10][2600/2912]    eta: 0:00:10  time: 0.0216  data_time: 0.0012  memory: 762  
2023/02/10 00:40:18 - mmengine - INFO - Epoch(val)  [10][2650/2912]    eta: 0:00:08  time: 0.0252  data_time: 0.0047  memory: 761  
2023/02/10 00:40:19 - mmengine - INFO - Epoch(val)  [10][2700/2912]    eta: 0:00:06  time: 0.0222  data_time: 0.0013  memory: 762  
2023/02/10 00:40:20 - mmengine - INFO - Epoch(val)  [10][2750/2912]    eta: 0:00:05  time: 0.0221  data_time: 0.0012  memory: 761  
2023/02/10 00:40:21 - mmengine - INFO - Epoch(val)  [10][2800/2912]    eta: 0:00:03  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 00:40:22 - mmengine - INFO - Epoch(val)  [10][2850/2912]    eta: 0:00:01  time: 0.0222  data_time: 0.0012  memory: 762  
2023/02/10 00:40:23 - mmengine - INFO - Epoch(val)  [10][2900/2912]    eta: 0:00:00  time: 0.0218  data_time: 0.0012  memory: 762  
2023/02/10 00:40:24 - mmengine - INFO - 
---------------iou_thr: 0.5---------------
2023/02/10 00:40:27 - mmengine - INFO - 
+-------------+------+-------+--------+-------+
| class       | gts  | dets  | recall | ap    |
+-------------+------+-------+--------+-------+
| aeroplane   | 433  | 1208  | 0.931  | 0.902 |
| bicycle     | 358  | 1246  | 0.936  | 0.873 |
| bird        | 559  | 1269  | 0.939  | 0.897 |
| boat        | 424  | 1971  | 0.882  | 0.755 |
| bottle      | 630  | 2872  | 0.883  | 0.740 |
| bus         | 301  | 1142  | 0.960  | 0.903 |
| car         | 1004 | 3661  | 0.920  | 0.844 |
| cat         | 612  | 1247  | 0.984  | 0.975 |
| chair       | 1176 | 6776  | 0.887  | 0.711 |
| cow         | 298  | 1095  | 0.966  | 0.877 |
| diningtable | 305  | 2103  | 0.843  | 0.682 |
| dog         | 759  | 1758  | 0.982  | 0.963 |
| horse       | 360  | 1068  | 0.953  | 0.907 |
| motorbike   | 356  | 1313  | 0.963  | 0.908 |
| person      | 4372 | 13241 | 0.943  | 0.892 |
| pottedplant | 489  | 2796  | 0.847  | 0.657 |
| sheep       | 413  | 1149  | 0.913  | 0.878 |
| sofa        | 285  | 1425  | 0.937  | 0.739 |
| train       | 315  | 952   | 0.956  | 0.926 |
| tvmonitor   | 392  | 1262  | 0.898  | 0.847 |
+-------------+------+-------+--------+-------+
| mAP         |      |       |        | 0.844 |
+-------------+------+-------+--------+-------+
2023/02/10 00:40:27 - mmengine - INFO - Epoch(val) [10][2912/2912]  pascal_voc/mAP: 0.8438  pascal_voc/AP50: 0.8440
2023/02/10 00:41:05 - mmengine - INFO - Epoch(train)  [11][ 50/179]  lr: 2.0000e-04  eta: 3:19:51  time: 0.7498  data_time: 0.0146  memory: 6893  loss: 0.2666  loss_rpn_cls: 0.0113  loss_rpn_bbox: 0.0125  loss_cls: 0.0921  acc: 98.0225  loss_bbox: 0.1508
2023/02/10 00:41:42 - mmengine - INFO - Epoch(train)  [11][100/179]  lr: 2.0000e-04  eta: 3:19:15  time: 0.7507  data_time: 0.0136  memory: 6893  loss: 0.2546  loss_rpn_cls: 0.0099  loss_rpn_bbox: 0.0117  loss_cls: 0.0878  acc: 96.9849  loss_bbox: 0.1452
2023/02/10 00:42:20 - mmengine - INFO - Epoch(train)  [11][150/179]  lr: 2.0000e-04  eta: 3:18:40  time: 0.7502  data_time: 0.0130  memory: 6893  loss: 0.2638  loss_rpn_cls: 0.0098  loss_rpn_bbox: 0.0120  loss_cls: 0.0910  acc: 97.1069  loss_bbox: 0.1510
2023/02/10 00:42:41 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:43:05 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:43:19 - mmengine - INFO - Epoch(train)  [12][ 50/179]  lr: 2.0000e-04  eta: 3:17:40  time: 0.7505  data_time: 0.0153  memory: 6919  loss: 0.2670  loss_rpn_cls: 0.0109  loss_rpn_bbox: 0.0127  loss_cls: 0.0927  acc: 96.6797  loss_bbox: 0.1507
2023/02/10 00:43:56 - mmengine - INFO - Epoch(train)  [12][100/179]  lr: 2.0000e-04  eta: 3:17:03  time: 0.7466  data_time: 0.0147  memory: 6894  loss: 0.2580  loss_rpn_cls: 0.0097  loss_rpn_bbox: 0.0116  loss_cls: 0.0884  acc: 96.5088  loss_bbox: 0.1482
2023/02/10 00:44:33 - mmengine - INFO - Epoch(train)  [12][150/179]  lr: 2.0000e-04  eta: 3:16:24  time: 0.7441  data_time: 0.0134  memory: 6893  loss: 0.2643  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0121  loss_cls: 0.0919  acc: 95.9717  loss_bbox: 0.1512
2023/02/10 00:44:55 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:45:32 - mmengine - INFO - Epoch(train)  [13][ 50/179]  lr: 2.0000e-04  eta: 3:15:25  time: 0.7502  data_time: 0.0151  memory: 6919  loss: 0.2583  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0115  loss_cls: 0.0888  acc: 96.8506  loss_bbox: 0.1488
2023/02/10 00:46:10 - mmengine - INFO - Epoch(train)  [13][100/179]  lr: 2.0000e-04  eta: 3:14:50  time: 0.7553  data_time: 0.0131  memory: 6893  loss: 0.2522  loss_rpn_cls: 0.0098  loss_rpn_bbox: 0.0113  loss_cls: 0.0864  acc: 95.9473  loss_bbox: 0.1447
2023/02/10 00:46:48 - mmengine - INFO - Epoch(train)  [13][150/179]  lr: 2.0000e-04  eta: 3:14:14  time: 0.7504  data_time: 0.0134  memory: 6893  loss: 0.2754  loss_rpn_cls: 0.0115  loss_rpn_bbox: 0.0129  loss_cls: 0.0950  acc: 95.8740  loss_bbox: 0.1561
2023/02/10 00:47:09 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:47:47 - mmengine - INFO - Epoch(train)  [14][ 50/179]  lr: 2.0000e-04  eta: 3:13:17  time: 0.7519  data_time: 0.0151  memory: 6894  loss: 0.2479  loss_rpn_cls: 0.0088  loss_rpn_bbox: 0.0108  loss_cls: 0.0859  acc: 97.0703  loss_bbox: 0.1424
2023/02/10 00:48:24 - mmengine - INFO - Epoch(train)  [14][100/179]  lr: 2.0000e-04  eta: 3:12:39  time: 0.7480  data_time: 0.0133  memory: 6893  loss: 0.2596  loss_rpn_cls: 0.0102  loss_rpn_bbox: 0.0120  loss_cls: 0.0906  acc: 95.3369  loss_bbox: 0.1469
2023/02/10 00:49:01 - mmengine - INFO - Epoch(train)  [14][150/179]  lr: 2.0000e-04  eta: 3:12:01  time: 0.7433  data_time: 0.0129  memory: 6893  loss: 0.2677  loss_rpn_cls: 0.0106  loss_rpn_bbox: 0.0124  loss_cls: 0.0926  acc: 96.2891  loss_bbox: 0.1522
2023/02/10 00:49:23 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:50:01 - mmengine - INFO - Epoch(train)  [15][ 50/179]  lr: 2.0000e-04  eta: 3:11:03  time: 0.7505  data_time: 0.0149  memory: 6893  loss: 0.2668  loss_rpn_cls: 0.0097  loss_rpn_bbox: 0.0119  loss_cls: 0.0910  acc: 95.8008  loss_bbox: 0.1542
2023/02/10 00:50:38 - mmengine - INFO - Epoch(train)  [15][100/179]  lr: 2.0000e-04  eta: 3:10:26  time: 0.7475  data_time: 0.0131  memory: 6894  loss: 0.2531  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0116  loss_cls: 0.0873  acc: 96.8628  loss_bbox: 0.1450
2023/02/10 00:51:15 - mmengine - INFO - Epoch(train)  [15][150/179]  lr: 2.0000e-04  eta: 3:09:48  time: 0.7463  data_time: 0.0130  memory: 6893  loss: 0.2592  loss_rpn_cls: 0.0100  loss_rpn_bbox: 0.0117  loss_cls: 0.0890  acc: 97.1436  loss_bbox: 0.1485
2023/02/10 00:51:37 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:51:37 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/02/10 00:52:15 - mmengine - INFO - Epoch(train)  [16][ 50/179]  lr: 2.0000e-04  eta: 3:08:49  time: 0.7475  data_time: 0.0149  memory: 6919  loss: 0.2561  loss_rpn_cls: 0.0089  loss_rpn_bbox: 0.0115  loss_cls: 0.0887  acc: 96.6675  loss_bbox: 0.1469
2023/02/10 00:52:53 - mmengine - INFO - Epoch(train)  [16][100/179]  lr: 2.0000e-04  eta: 3:08:14  time: 0.7532  data_time: 0.0131  memory: 6893  loss: 0.2628  loss_rpn_cls: 0.0097  loss_rpn_bbox: 0.0123  loss_cls: 0.0897  acc: 96.2402  loss_bbox: 0.1512
2023/02/10 00:53:30 - mmengine - INFO - Epoch(train)  [16][150/179]  lr: 2.0000e-04  eta: 3:07:36  time: 0.7471  data_time: 0.0131  memory: 6894  loss: 0.2671  loss_rpn_cls: 0.0109  loss_rpn_bbox: 0.0123  loss_cls: 0.0920  acc: 97.7295  loss_bbox: 0.1519
2023/02/10 00:53:52 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:54:29 - mmengine - INFO - Epoch(train)  [17][ 50/179]  lr: 2.0000e-04  eta: 3:06:37  time: 0.7508  data_time: 0.0151  memory: 6894  loss: 0.2723  loss_rpn_cls: 0.0111  loss_rpn_bbox: 0.0122  loss_cls: 0.0941  acc: 95.3491  loss_bbox: 0.1549
2023/02/10 00:55:07 - mmengine - INFO - Epoch(train)  [17][100/179]  lr: 2.0000e-04  eta: 3:06:01  time: 0.7527  data_time: 0.0132  memory: 6893  loss: 0.2537  loss_rpn_cls: 0.0088  loss_rpn_bbox: 0.0111  loss_cls: 0.0869  acc: 96.8628  loss_bbox: 0.1468
2023/02/10 00:55:34 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:55:44 - mmengine - INFO - Epoch(train)  [17][150/179]  lr: 2.0000e-04  eta: 3:05:23  time: 0.7430  data_time: 0.0134  memory: 6894  loss: 0.2462  loss_rpn_cls: 0.0090  loss_rpn_bbox: 0.0115  loss_cls: 0.0849  acc: 94.8853  loss_bbox: 0.1408
2023/02/10 00:56:06 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:56:43 - mmengine - INFO - Epoch(train)  [18][ 50/179]  lr: 2.0000e-04  eta: 3:04:24  time: 0.7481  data_time: 0.0152  memory: 6894  loss: 0.2736  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0124  loss_cls: 0.0960  acc: 95.3735  loss_bbox: 0.1561
2023/02/10 00:57:21 - mmengine - INFO - Epoch(train)  [18][100/179]  lr: 2.0000e-04  eta: 3:03:47  time: 0.7503  data_time: 0.0131  memory: 6894  loss: 0.2524  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0116  loss_cls: 0.0869  acc: 96.6309  loss_bbox: 0.1446
2023/02/10 00:57:58 - mmengine - INFO - Epoch(train)  [18][150/179]  lr: 2.0000e-04  eta: 3:03:11  time: 0.7519  data_time: 0.0132  memory: 6893  loss: 0.2429  loss_rpn_cls: 0.0094  loss_rpn_bbox: 0.0113  loss_cls: 0.0841  acc: 97.1802  loss_bbox: 0.1381
2023/02/10 00:58:20 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 00:58:58 - mmengine - INFO - Epoch(train)  [19][ 50/179]  lr: 2.0000e-04  eta: 3:02:13  time: 0.7575  data_time: 0.0159  memory: 6893  loss: 0.2538  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0121  loss_cls: 0.0868  acc: 96.6919  loss_bbox: 0.1457
2023/02/10 00:59:35 - mmengine - INFO - Epoch(train)  [19][100/179]  lr: 2.0000e-04  eta: 3:01:36  time: 0.7483  data_time: 0.0130  memory: 6893  loss: 0.2520  loss_rpn_cls: 0.0086  loss_rpn_bbox: 0.0114  loss_cls: 0.0872  acc: 96.4478  loss_bbox: 0.1449
2023/02/10 01:00:12 - mmengine - INFO - Epoch(train)  [19][150/179]  lr: 2.0000e-04  eta: 3:00:59  time: 0.7471  data_time: 0.0132  memory: 6894  loss: 0.2541  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0113  loss_cls: 0.0891  acc: 96.0938  loss_bbox: 0.1446
2023/02/10 01:00:34 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:01:11 - mmengine - INFO - Epoch(train)  [20][ 50/179]  lr: 2.0000e-04  eta: 2:59:59  time: 0.7488  data_time: 0.0156  memory: 6894  loss: 0.2532  loss_rpn_cls: 0.0094  loss_rpn_bbox: 0.0126  loss_cls: 0.0870  acc: 98.0225  loss_bbox: 0.1441
2023/02/10 01:01:48 - mmengine - INFO - Epoch(train)  [20][100/179]  lr: 2.0000e-04  eta: 2:59:21  time: 0.7451  data_time: 0.0136  memory: 6893  loss: 0.2550  loss_rpn_cls: 0.0094  loss_rpn_bbox: 0.0114  loss_cls: 0.0888  acc: 97.8760  loss_bbox: 0.1454
2023/02/10 01:02:26 - mmengine - INFO - Epoch(train)  [20][150/179]  lr: 2.0000e-04  eta: 2:58:45  time: 0.7519  data_time: 0.0131  memory: 6894  loss: 0.2531  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0118  loss_cls: 0.0855  acc: 97.2778  loss_bbox: 0.1466
2023/02/10 01:02:48 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:02:48 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/02/10 01:02:50 - mmengine - INFO - Epoch(val)  [20][  50/2912]    eta: 0:01:03  time: 0.0221  data_time: 0.0013  memory: 6893  
2023/02/10 01:02:51 - mmengine - INFO - Epoch(val)  [20][ 100/2912]    eta: 0:01:01  time: 0.0218  data_time: 0.0011  memory: 760  
2023/02/10 01:02:52 - mmengine - INFO - Epoch(val)  [20][ 150/2912]    eta: 0:01:00  time: 0.0218  data_time: 0.0013  memory: 762  
2023/02/10 01:02:53 - mmengine - INFO - Epoch(val)  [20][ 200/2912]    eta: 0:00:59  time: 0.0219  data_time: 0.0013  memory: 760  
2023/02/10 01:02:54 - mmengine - INFO - Epoch(val)  [20][ 250/2912]    eta: 0:00:58  time: 0.0219  data_time: 0.0013  memory: 762  
2023/02/10 01:02:55 - mmengine - INFO - Epoch(val)  [20][ 300/2912]    eta: 0:00:57  time: 0.0220  data_time: 0.0013  memory: 762  
2023/02/10 01:02:56 - mmengine - INFO - Epoch(val)  [20][ 350/2912]    eta: 0:00:56  time: 0.0218  data_time: 0.0012  memory: 760  
2023/02/10 01:02:57 - mmengine - INFO - Epoch(val)  [20][ 400/2912]    eta: 0:00:54  time: 0.0219  data_time: 0.0013  memory: 762  
2023/02/10 01:02:58 - mmengine - INFO - Epoch(val)  [20][ 450/2912]    eta: 0:00:53  time: 0.0218  data_time: 0.0013  memory: 762  
2023/02/10 01:02:59 - mmengine - INFO - Epoch(val)  [20][ 500/2912]    eta: 0:00:52  time: 0.0217  data_time: 0.0013  memory: 762  
2023/02/10 01:03:01 - mmengine - INFO - Epoch(val)  [20][ 550/2912]    eta: 0:00:51  time: 0.0218  data_time: 0.0013  memory: 762  
2023/02/10 01:03:02 - mmengine - INFO - Epoch(val)  [20][ 600/2912]    eta: 0:00:50  time: 0.0217  data_time: 0.0012  memory: 762  
2023/02/10 01:03:03 - mmengine - INFO - Epoch(val)  [20][ 650/2912]    eta: 0:00:49  time: 0.0219  data_time: 0.0013  memory: 760  
2023/02/10 01:03:04 - mmengine - INFO - Epoch(val)  [20][ 700/2912]    eta: 0:00:48  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:03:05 - mmengine - INFO - Epoch(val)  [20][ 750/2912]    eta: 0:00:47  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:03:06 - mmengine - INFO - Epoch(val)  [20][ 800/2912]    eta: 0:00:46  time: 0.0219  data_time: 0.0013  memory: 760  
2023/02/10 01:03:07 - mmengine - INFO - Epoch(val)  [20][ 850/2912]    eta: 0:00:45  time: 0.0220  data_time: 0.0013  memory: 762  
2023/02/10 01:03:08 - mmengine - INFO - Epoch(val)  [20][ 900/2912]    eta: 0:00:43  time: 0.0218  data_time: 0.0013  memory: 761  
2023/02/10 01:03:09 - mmengine - INFO - Epoch(val)  [20][ 950/2912]    eta: 0:00:42  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:03:10 - mmengine - INFO - Epoch(val)  [20][1000/2912]    eta: 0:00:41  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:03:12 - mmengine - INFO - Epoch(val)  [20][1050/2912]    eta: 0:00:40  time: 0.0221  data_time: 0.0013  memory: 762  
2023/02/10 01:03:13 - mmengine - INFO - Epoch(val)  [20][1100/2912]    eta: 0:00:39  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 01:03:14 - mmengine - INFO - Epoch(val)  [20][1150/2912]    eta: 0:00:38  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 01:03:15 - mmengine - INFO - Epoch(val)  [20][1200/2912]    eta: 0:00:37  time: 0.0220  data_time: 0.0012  memory: 761  
2023/02/10 01:03:16 - mmengine - INFO - Epoch(val)  [20][1250/2912]    eta: 0:00:36  time: 0.0222  data_time: 0.0012  memory: 762  
2023/02/10 01:03:17 - mmengine - INFO - Epoch(val)  [20][1300/2912]    eta: 0:00:35  time: 0.0221  data_time: 0.0011  memory: 762  
2023/02/10 01:03:18 - mmengine - INFO - Epoch(val)  [20][1350/2912]    eta: 0:00:34  time: 0.0220  data_time: 0.0012  memory: 761  
2023/02/10 01:03:19 - mmengine - INFO - Epoch(val)  [20][1400/2912]    eta: 0:00:33  time: 0.0222  data_time: 0.0011  memory: 761  
2023/02/10 01:03:20 - mmengine - INFO - Epoch(val)  [20][1450/2912]    eta: 0:00:32  time: 0.0221  data_time: 0.0011  memory: 762  
2023/02/10 01:03:21 - mmengine - INFO - Epoch(val)  [20][1500/2912]    eta: 0:00:30  time: 0.0221  data_time: 0.0011  memory: 761  
2023/02/10 01:03:23 - mmengine - INFO - Epoch(val)  [20][1550/2912]    eta: 0:00:29  time: 0.0221  data_time: 0.0011  memory: 761  
2023/02/10 01:03:24 - mmengine - INFO - Epoch(val)  [20][1600/2912]    eta: 0:00:28  time: 0.0221  data_time: 0.0012  memory: 762  
2023/02/10 01:03:25 - mmengine - INFO - Epoch(val)  [20][1650/2912]    eta: 0:00:27  time: 0.0215  data_time: 0.0012  memory: 761  
2023/02/10 01:03:26 - mmengine - INFO - Epoch(val)  [20][1700/2912]    eta: 0:00:26  time: 0.0215  data_time: 0.0012  memory: 762  
2023/02/10 01:03:27 - mmengine - INFO - Epoch(val)  [20][1750/2912]    eta: 0:00:25  time: 0.0216  data_time: 0.0012  memory: 761  
2023/02/10 01:03:28 - mmengine - INFO - Epoch(val)  [20][1800/2912]    eta: 0:00:24  time: 0.0215  data_time: 0.0012  memory: 761  
2023/02/10 01:03:29 - mmengine - INFO - Epoch(val)  [20][1850/2912]    eta: 0:00:23  time: 0.0216  data_time: 0.0012  memory: 761  
2023/02/10 01:03:30 - mmengine - INFO - Epoch(val)  [20][1900/2912]    eta: 0:00:22  time: 0.0216  data_time: 0.0012  memory: 760  
2023/02/10 01:03:31 - mmengine - INFO - Epoch(val)  [20][1950/2912]    eta: 0:00:21  time: 0.0216  data_time: 0.0013  memory: 761  
2023/02/10 01:03:32 - mmengine - INFO - Epoch(val)  [20][2000/2912]    eta: 0:00:19  time: 0.0215  data_time: 0.0012  memory: 760  
2023/02/10 01:03:33 - mmengine - INFO - Epoch(val)  [20][2050/2912]    eta: 0:00:18  time: 0.0216  data_time: 0.0012  memory: 761  
2023/02/10 01:03:34 - mmengine - INFO - Epoch(val)  [20][2100/2912]    eta: 0:00:17  time: 0.0217  data_time: 0.0013  memory: 762  
2023/02/10 01:03:36 - mmengine - INFO - Epoch(val)  [20][2150/2912]    eta: 0:00:16  time: 0.0216  data_time: 0.0013  memory: 762  
2023/02/10 01:03:37 - mmengine - INFO - Epoch(val)  [20][2200/2912]    eta: 0:00:15  time: 0.0218  data_time: 0.0013  memory: 760  
2023/02/10 01:03:38 - mmengine - INFO - Epoch(val)  [20][2250/2912]    eta: 0:00:14  time: 0.0218  data_time: 0.0012  memory: 760  
2023/02/10 01:03:39 - mmengine - INFO - Epoch(val)  [20][2300/2912]    eta: 0:00:13  time: 0.0219  data_time: 0.0012  memory: 761  
2023/02/10 01:03:40 - mmengine - INFO - Epoch(val)  [20][2350/2912]    eta: 0:00:12  time: 0.0220  data_time: 0.0013  memory: 760  
2023/02/10 01:03:41 - mmengine - INFO - Epoch(val)  [20][2400/2912]    eta: 0:00:11  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:03:42 - mmengine - INFO - Epoch(val)  [20][2450/2912]    eta: 0:00:10  time: 0.0216  data_time: 0.0013  memory: 760  
2023/02/10 01:03:43 - mmengine - INFO - Epoch(val)  [20][2500/2912]    eta: 0:00:08  time: 0.0217  data_time: 0.0013  memory: 760  
2023/02/10 01:03:44 - mmengine - INFO - Epoch(val)  [20][2550/2912]    eta: 0:00:07  time: 0.0217  data_time: 0.0012  memory: 760  
2023/02/10 01:03:45 - mmengine - INFO - Epoch(val)  [20][2600/2912]    eta: 0:00:06  time: 0.0216  data_time: 0.0013  memory: 762  
2023/02/10 01:03:46 - mmengine - INFO - Epoch(val)  [20][2650/2912]    eta: 0:00:05  time: 0.0218  data_time: 0.0013  memory: 762  
2023/02/10 01:03:48 - mmengine - INFO - Epoch(val)  [20][2700/2912]    eta: 0:00:04  time: 0.0219  data_time: 0.0013  memory: 762  
2023/02/10 01:03:49 - mmengine - INFO - Epoch(val)  [20][2750/2912]    eta: 0:00:03  time: 0.0218  data_time: 0.0013  memory: 761  
2023/02/10 01:03:50 - mmengine - INFO - Epoch(val)  [20][2800/2912]    eta: 0:00:02  time: 0.0216  data_time: 0.0013  memory: 761  
2023/02/10 01:03:51 - mmengine - INFO - Epoch(val)  [20][2850/2912]    eta: 0:00:01  time: 0.0220  data_time: 0.0013  memory: 762  
2023/02/10 01:03:52 - mmengine - INFO - Epoch(val)  [20][2900/2912]    eta: 0:00:00  time: 0.0218  data_time: 0.0013  memory: 763  
2023/02/10 01:03:53 - mmengine - INFO - 
---------------iou_thr: 0.5---------------
2023/02/10 01:03:56 - mmengine - INFO - 
+-------------+------+-------+--------+-------+
| class       | gts  | dets  | recall | ap    |
+-------------+------+-------+--------+-------+
| aeroplane   | 433  | 1270  | 0.938  | 0.902 |
| bicycle     | 358  | 1290  | 0.933  | 0.871 |
| bird        | 559  | 1281  | 0.937  | 0.896 |
| boat        | 424  | 2015  | 0.892  | 0.757 |
| bottle      | 630  | 3042  | 0.892  | 0.745 |
| bus         | 301  | 1168  | 0.957  | 0.899 |
| car         | 1004 | 3732  | 0.920  | 0.844 |
| cat         | 612  | 1265  | 0.985  | 0.976 |
| chair       | 1176 | 7125  | 0.891  | 0.711 |
| cow         | 298  | 1140  | 0.973  | 0.883 |
| diningtable | 305  | 2279  | 0.839  | 0.681 |
| dog         | 759  | 1777  | 0.978  | 0.958 |
| horse       | 360  | 1118  | 0.956  | 0.908 |
| motorbike   | 356  | 1312  | 0.961  | 0.899 |
| person      | 4372 | 13669 | 0.945  | 0.896 |
| pottedplant | 489  | 2921  | 0.849  | 0.654 |
| sheep       | 413  | 1148  | 0.918  | 0.880 |
| sofa        | 285  | 1469  | 0.937  | 0.742 |
| train       | 315  | 1004  | 0.956  | 0.926 |
| tvmonitor   | 392  | 1286  | 0.903  | 0.852 |
+-------------+------+-------+--------+-------+
| mAP         |      |       |        | 0.844 |
+-------------+------+-------+--------+-------+
2023/02/10 01:03:56 - mmengine - INFO - Epoch(val) [20][2912/2912]  pascal_voc/mAP: 0.8439  pascal_voc/AP50: 0.8440
2023/02/10 01:04:34 - mmengine - INFO - Epoch(train)  [21][ 50/179]  lr: 2.0000e-04  eta: 2:57:46  time: 0.7513  data_time: 0.0157  memory: 6893  loss: 0.2603  loss_rpn_cls: 0.0099  loss_rpn_bbox: 0.0117  loss_cls: 0.0901  acc: 97.2412  loss_bbox: 0.1486
2023/02/10 01:05:11 - mmengine - INFO - Epoch(train)  [21][100/179]  lr: 2.0000e-04  eta: 2:57:09  time: 0.7462  data_time: 0.0131  memory: 6893  loss: 0.2586  loss_rpn_cls: 0.0093  loss_rpn_bbox: 0.0114  loss_cls: 0.0891  acc: 95.9473  loss_bbox: 0.1488
2023/02/10 01:05:48 - mmengine - INFO - Epoch(train)  [21][150/179]  lr: 2.0000e-04  eta: 2:56:31  time: 0.7446  data_time: 0.0131  memory: 6893  loss: 0.2552  loss_rpn_cls: 0.0081  loss_rpn_bbox: 0.0116  loss_cls: 0.0880  acc: 96.9604  loss_bbox: 0.1475
2023/02/10 01:06:10 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:06:48 - mmengine - INFO - Epoch(train)  [22][ 50/179]  lr: 2.0000e-04  eta: 2:55:33  time: 0.7588  data_time: 0.0153  memory: 8794  loss: 0.2391  loss_rpn_cls: 0.0076  loss_rpn_bbox: 0.0104  loss_cls: 0.0829  acc: 97.3267  loss_bbox: 0.1383
2023/02/10 01:07:25 - mmengine - INFO - Epoch(train)  [22][100/179]  lr: 2.0000e-04  eta: 2:54:56  time: 0.7494  data_time: 0.0134  memory: 6894  loss: 0.2617  loss_rpn_cls: 0.0100  loss_rpn_bbox: 0.0122  loss_cls: 0.0896  acc: 97.7905  loss_bbox: 0.1498
2023/02/10 01:08:03 - mmengine - INFO - Epoch(train)  [22][150/179]  lr: 2.0000e-04  eta: 2:54:19  time: 0.7510  data_time: 0.0133  memory: 6893  loss: 0.2642  loss_rpn_cls: 0.0110  loss_rpn_bbox: 0.0128  loss_cls: 0.0889  acc: 95.3735  loss_bbox: 0.1515
2023/02/10 01:08:24 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:09:02 - mmengine - INFO - Epoch(train)  [23][ 50/179]  lr: 2.0000e-04  eta: 2:53:21  time: 0.7534  data_time: 0.0151  memory: 6893  loss: 0.2552  loss_rpn_cls: 0.0089  loss_rpn_bbox: 0.0120  loss_cls: 0.0866  acc: 96.9360  loss_bbox: 0.1478
2023/02/10 01:09:11 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:09:40 - mmengine - INFO - Epoch(train)  [23][100/179]  lr: 2.0000e-04  eta: 2:52:44  time: 0.7487  data_time: 0.0137  memory: 6893  loss: 0.2483  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0112  loss_cls: 0.0853  acc: 97.5342  loss_bbox: 0.1426
2023/02/10 01:10:17 - mmengine - INFO - Epoch(train)  [23][150/179]  lr: 2.0000e-04  eta: 2:52:07  time: 0.7530  data_time: 0.0148  memory: 6893  loss: 0.2447  loss_rpn_cls: 0.0083  loss_rpn_bbox: 0.0113  loss_cls: 0.0833  acc: 94.1895  loss_bbox: 0.1418
2023/02/10 01:10:39 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:11:17 - mmengine - INFO - Epoch(train)  [24][ 50/179]  lr: 2.0000e-04  eta: 2:51:10  time: 0.7585  data_time: 0.0151  memory: 6893  loss: 0.2680  loss_rpn_cls: 0.0095  loss_rpn_bbox: 0.0118  loss_cls: 0.0925  acc: 97.6562  loss_bbox: 0.1542
2023/02/10 01:11:55 - mmengine - INFO - Epoch(train)  [24][100/179]  lr: 2.0000e-04  eta: 2:50:34  time: 0.7563  data_time: 0.0132  memory: 6893  loss: 0.2445  loss_rpn_cls: 0.0090  loss_rpn_bbox: 0.0115  loss_cls: 0.0845  acc: 97.6196  loss_bbox: 0.1395
2023/02/10 01:12:32 - mmengine - INFO - Epoch(train)  [24][150/179]  lr: 2.0000e-04  eta: 2:49:57  time: 0.7508  data_time: 0.0134  memory: 6893  loss: 0.2581  loss_rpn_cls: 0.0086  loss_rpn_bbox: 0.0119  loss_cls: 0.0882  acc: 96.4722  loss_bbox: 0.1493
2023/02/10 01:12:54 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:13:31 - mmengine - INFO - Epoch(train)  [25][ 50/179]  lr: 2.0000e-04  eta: 2:48:57  time: 0.7471  data_time: 0.0149  memory: 9752  loss: 0.2410  loss_rpn_cls: 0.0073  loss_rpn_bbox: 0.0107  loss_cls: 0.0823  acc: 97.5098  loss_bbox: 0.1407
2023/02/10 01:14:08 - mmengine - INFO - Epoch(train)  [25][100/179]  lr: 2.0000e-04  eta: 2:48:19  time: 0.7455  data_time: 0.0132  memory: 6893  loss: 0.2457  loss_rpn_cls: 0.0089  loss_rpn_bbox: 0.0113  loss_cls: 0.0840  acc: 97.1069  loss_bbox: 0.1415
2023/02/10 01:14:46 - mmengine - INFO - Epoch(train)  [25][150/179]  lr: 2.0000e-04  eta: 2:47:42  time: 0.7505  data_time: 0.0132  memory: 6893  loss: 0.2529  loss_rpn_cls: 0.0084  loss_rpn_bbox: 0.0116  loss_cls: 0.0858  acc: 96.5332  loss_bbox: 0.1471
2023/02/10 01:15:08 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:15:08 - mmengine - INFO - Saving checkpoint at 25 epochs
2023/02/10 01:15:46 - mmengine - INFO - Epoch(train)  [26][ 50/179]  lr: 2.0000e-04  eta: 2:46:43  time: 0.7480  data_time: 0.0159  memory: 6919  loss: 0.2570  loss_rpn_cls: 0.0096  loss_rpn_bbox: 0.0118  loss_cls: 0.0874  acc: 96.5210  loss_bbox: 0.1482
2023/02/10 01:16:23 - mmengine - INFO - Epoch(train)  [26][100/179]  lr: 2.0000e-04  eta: 2:46:05  time: 0.7429  data_time: 0.0136  memory: 6893  loss: 0.2464  loss_rpn_cls: 0.0081  loss_rpn_bbox: 0.0111  loss_cls: 0.0837  acc: 96.9116  loss_bbox: 0.1434
2023/02/10 01:17:00 - mmengine - INFO - Epoch(train)  [26][150/179]  lr: 2.0000e-04  eta: 2:45:28  time: 0.7502  data_time: 0.0136  memory: 6893  loss: 0.2506  loss_rpn_cls: 0.0086  loss_rpn_bbox: 0.0121  loss_cls: 0.0854  acc: 96.6553  loss_bbox: 0.1445
2023/02/10 01:17:22 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:17:59 - mmengine - INFO - Epoch(train)  [27][ 50/179]  lr: 2.0000e-04  eta: 2:44:28  time: 0.7466  data_time: 0.0152  memory: 6893  loss: 0.2410  loss_rpn_cls: 0.0080  loss_rpn_bbox: 0.0108  loss_cls: 0.0817  acc: 98.3765  loss_bbox: 0.1406
2023/02/10 01:18:37 - mmengine - INFO - Epoch(train)  [27][100/179]  lr: 2.0000e-04  eta: 2:43:51  time: 0.7497  data_time: 0.0135  memory: 6893  loss: 0.2463  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0116  loss_cls: 0.0840  acc: 96.7651  loss_bbox: 0.1415
2023/02/10 01:19:14 - mmengine - INFO - Epoch(train)  [27][150/179]  lr: 2.0000e-04  eta: 2:43:14  time: 0.7491  data_time: 0.0146  memory: 6893  loss: 0.2541  loss_rpn_cls: 0.0086  loss_rpn_bbox: 0.0115  loss_cls: 0.0870  acc: 96.9604  loss_bbox: 0.1470
2023/02/10 01:19:36 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:20:13 - mmengine - INFO - Epoch(train)  [28][ 50/179]  lr: 2.0000e-04  eta: 2:42:15  time: 0.7500  data_time: 0.0154  memory: 8793  loss: 0.2569  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0121  loss_cls: 0.0874  acc: 97.5098  loss_bbox: 0.1482
2023/02/10 01:20:51 - mmengine - INFO - Epoch(train)  [28][100/179]  lr: 2.0000e-04  eta: 2:41:37  time: 0.7435  data_time: 0.0131  memory: 6893  loss: 0.2379  loss_rpn_cls: 0.0088  loss_rpn_bbox: 0.0107  loss_cls: 0.0823  acc: 96.8750  loss_bbox: 0.1360
2023/02/10 01:21:28 - mmengine - INFO - Epoch(train)  [28][150/179]  lr: 2.0000e-04  eta: 2:41:00  time: 0.7473  data_time: 0.0136  memory: 6893  loss: 0.2425  loss_rpn_cls: 0.0089  loss_rpn_bbox: 0.0111  loss_cls: 0.0822  acc: 97.3755  loss_bbox: 0.1403
2023/02/10 01:21:41 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:21:50 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:22:27 - mmengine - INFO - Epoch(train)  [29][ 50/179]  lr: 2.0000e-04  eta: 2:40:00  time: 0.7463  data_time: 0.0155  memory: 6893  loss: 0.2620  loss_rpn_cls: 0.0094  loss_rpn_bbox: 0.0116  loss_cls: 0.0892  acc: 97.1680  loss_bbox: 0.1518
2023/02/10 01:23:04 - mmengine - INFO - Epoch(train)  [29][100/179]  lr: 2.0000e-04  eta: 2:39:23  time: 0.7498  data_time: 0.0136  memory: 6893  loss: 0.2554  loss_rpn_cls: 0.0092  loss_rpn_bbox: 0.0120  loss_cls: 0.0878  acc: 96.5576  loss_bbox: 0.1464
2023/02/10 01:23:42 - mmengine - INFO - Epoch(train)  [29][150/179]  lr: 2.0000e-04  eta: 2:38:46  time: 0.7448  data_time: 0.0134  memory: 6893  loss: 0.2438  loss_rpn_cls: 0.0087  loss_rpn_bbox: 0.0111  loss_cls: 0.0833  acc: 94.5435  loss_bbox: 0.1407
2023/02/10 01:24:03 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:24:41 - mmengine - INFO - Epoch(train)  [30][ 50/179]  lr: 2.0000e-04  eta: 2:37:47  time: 0.7552  data_time: 0.0155  memory: 6919  loss: 0.2435  loss_rpn_cls: 0.0090  loss_rpn_bbox: 0.0117  loss_cls: 0.0824  acc: 97.3389  loss_bbox: 0.1404
2023/02/10 01:25:19 - mmengine - INFO - Epoch(train)  [30][100/179]  lr: 2.0000e-04  eta: 2:37:10  time: 0.7515  data_time: 0.0142  memory: 6893  loss: 0.2637  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0116  loss_cls: 0.0896  acc: 97.1558  loss_bbox: 0.1534
2023/02/10 01:25:56 - mmengine - INFO - Epoch(train)  [30][150/179]  lr: 2.0000e-04  eta: 2:36:33  time: 0.7491  data_time: 0.0137  memory: 6894  loss: 0.2551  loss_rpn_cls: 0.0090  loss_rpn_bbox: 0.0117  loss_cls: 0.0874  acc: 96.4355  loss_bbox: 0.1470
2023/02/10 01:26:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:26:18 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/02/10 01:26:20 - mmengine - INFO - Epoch(val)  [30][  50/2912]    eta: 0:01:05  time: 0.0228  data_time: 0.0015  memory: 6919  
2023/02/10 01:26:21 - mmengine - INFO - Epoch(val)  [30][ 100/2912]    eta: 0:01:04  time: 0.0227  data_time: 0.0014  memory: 761  
2023/02/10 01:26:22 - mmengine - INFO - Epoch(val)  [30][ 150/2912]    eta: 0:01:02  time: 0.0224  data_time: 0.0013  memory: 762  
2023/02/10 01:26:23 - mmengine - INFO - Epoch(val)  [30][ 200/2912]    eta: 0:01:00  time: 0.0220  data_time: 0.0012  memory: 760  
2023/02/10 01:26:24 - mmengine - INFO - Epoch(val)  [30][ 250/2912]    eta: 0:00:59  time: 0.0220  data_time: 0.0012  memory: 762  
2023/02/10 01:26:26 - mmengine - INFO - Epoch(val)  [30][ 300/2912]    eta: 0:00:58  time: 0.0222  data_time: 0.0013  memory: 762  
2023/02/10 01:26:27 - mmengine - INFO - Epoch(val)  [30][ 350/2912]    eta: 0:00:57  time: 0.0218  data_time: 0.0012  memory: 760  
2023/02/10 01:26:28 - mmengine - INFO - Epoch(val)  [30][ 400/2912]    eta: 0:00:55  time: 0.0221  data_time: 0.0013  memory: 762  
2023/02/10 01:26:29 - mmengine - INFO - Epoch(val)  [30][ 450/2912]    eta: 0:00:54  time: 0.0218  data_time: 0.0012  memory: 762  
2023/02/10 01:26:30 - mmengine - INFO - Epoch(val)  [30][ 500/2912]    eta: 0:00:53  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:26:31 - mmengine - INFO - Epoch(val)  [30][ 550/2912]    eta: 0:00:52  time: 0.0219  data_time: 0.0013  memory: 762  
2023/02/10 01:26:32 - mmengine - INFO - Epoch(val)  [30][ 600/2912]    eta: 0:00:51  time: 0.0217  data_time: 0.0012  memory: 762  
2023/02/10 01:26:33 - mmengine - INFO - Epoch(val)  [30][ 650/2912]    eta: 0:00:49  time: 0.0220  data_time: 0.0013  memory: 760  
2023/02/10 01:26:34 - mmengine - INFO - Epoch(val)  [30][ 700/2912]    eta: 0:00:48  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:26:35 - mmengine - INFO - Epoch(val)  [30][ 750/2912]    eta: 0:00:47  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:26:37 - mmengine - INFO - Epoch(val)  [30][ 800/2912]    eta: 0:00:46  time: 0.0217  data_time: 0.0012  memory: 761  
2023/02/10 01:26:38 - mmengine - INFO - Epoch(val)  [30][ 850/2912]    eta: 0:00:45  time: 0.0220  data_time: 0.0013  memory: 762  
2023/02/10 01:26:39 - mmengine - INFO - Epoch(val)  [30][ 900/2912]    eta: 0:00:44  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:26:40 - mmengine - INFO - Epoch(val)  [30][ 950/2912]    eta: 0:00:43  time: 0.0217  data_time: 0.0012  memory: 761  
2023/02/10 01:26:41 - mmengine - INFO - Epoch(val)  [30][1000/2912]    eta: 0:00:42  time: 0.0217  data_time: 0.0013  memory: 761  
2023/02/10 01:26:42 - mmengine - INFO - Epoch(val)  [30][1050/2912]    eta: 0:00:40  time: 0.0219  data_time: 0.0013  memory: 762  
2023/02/10 01:26:43 - mmengine - INFO - Epoch(val)  [30][1100/2912]    eta: 0:00:39  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:26:44 - mmengine - INFO - Epoch(val)  [30][1150/2912]    eta: 0:00:38  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:26:45 - mmengine - INFO - Epoch(val)  [30][1200/2912]    eta: 0:00:37  time: 0.0217  data_time: 0.0012  memory: 761  
2023/02/10 01:26:46 - mmengine - INFO - Epoch(val)  [30][1250/2912]    eta: 0:00:36  time: 0.0219  data_time: 0.0012  memory: 762  
2023/02/10 01:26:47 - mmengine - INFO - Epoch(val)  [30][1300/2912]    eta: 0:00:35  time: 0.0218  data_time: 0.0012  memory: 762  
2023/02/10 01:26:49 - mmengine - INFO - Epoch(val)  [30][1350/2912]    eta: 0:00:34  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:26:50 - mmengine - INFO - Epoch(val)  [30][1400/2912]    eta: 0:00:33  time: 0.0218  data_time: 0.0012  memory: 762  
2023/02/10 01:26:51 - mmengine - INFO - Epoch(val)  [30][1450/2912]    eta: 0:00:32  time: 0.0219  data_time: 0.0012  memory: 762  
2023/02/10 01:26:52 - mmengine - INFO - Epoch(val)  [30][1500/2912]    eta: 0:00:30  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 01:26:53 - mmengine - INFO - Epoch(val)  [30][1550/2912]    eta: 0:00:29  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 01:26:54 - mmengine - INFO - Epoch(val)  [30][1600/2912]    eta: 0:00:28  time: 0.0220  data_time: 0.0012  memory: 762  
2023/02/10 01:26:55 - mmengine - INFO - Epoch(val)  [30][1650/2912]    eta: 0:00:27  time: 0.0221  data_time: 0.0013  memory: 761  
2023/02/10 01:26:56 - mmengine - INFO - Epoch(val)  [30][1700/2912]    eta: 0:00:26  time: 0.0221  data_time: 0.0013  memory: 762  
2023/02/10 01:26:57 - mmengine - INFO - Epoch(val)  [30][1750/2912]    eta: 0:00:25  time: 0.0221  data_time: 0.0012  memory: 761  
2023/02/10 01:26:58 - mmengine - INFO - Epoch(val)  [30][1800/2912]    eta: 0:00:24  time: 0.0217  data_time: 0.0012  memory: 761  
2023/02/10 01:27:00 - mmengine - INFO - Epoch(val)  [30][1850/2912]    eta: 0:00:23  time: 0.0219  data_time: 0.0012  memory: 761  
2023/02/10 01:27:01 - mmengine - INFO - Epoch(val)  [30][1900/2912]    eta: 0:00:22  time: 0.0220  data_time: 0.0012  memory: 760  
2023/02/10 01:27:02 - mmengine - INFO - Epoch(val)  [30][1950/2912]    eta: 0:00:21  time: 0.0219  data_time: 0.0013  memory: 761  
2023/02/10 01:27:03 - mmengine - INFO - Epoch(val)  [30][2000/2912]    eta: 0:00:20  time: 0.0218  data_time: 0.0012  memory: 760  
2023/02/10 01:27:04 - mmengine - INFO - Epoch(val)  [30][2050/2912]    eta: 0:00:18  time: 0.0221  data_time: 0.0012  memory: 761  
2023/02/10 01:27:05 - mmengine - INFO - Epoch(val)  [30][2100/2912]    eta: 0:00:17  time: 0.0219  data_time: 0.0012  memory: 762  
2023/02/10 01:27:06 - mmengine - INFO - Epoch(val)  [30][2150/2912]    eta: 0:00:16  time: 0.0219  data_time: 0.0012  memory: 761  
2023/02/10 01:27:07 - mmengine - INFO - Epoch(val)  [30][2200/2912]    eta: 0:00:15  time: 0.0219  data_time: 0.0012  memory: 760  
2023/02/10 01:27:08 - mmengine - INFO - Epoch(val)  [30][2250/2912]    eta: 0:00:14  time: 0.0218  data_time: 0.0012  memory: 760  
2023/02/10 01:27:09 - mmengine - INFO - Epoch(val)  [30][2300/2912]    eta: 0:00:13  time: 0.0220  data_time: 0.0012  memory: 761  
2023/02/10 01:27:11 - mmengine - INFO - Epoch(val)  [30][2350/2912]    eta: 0:00:12  time: 0.0220  data_time: 0.0012  memory: 760  
2023/02/10 01:27:12 - mmengine - INFO - Epoch(val)  [30][2400/2912]    eta: 0:00:11  time: 0.0220  data_time: 0.0012  memory: 761  
2023/02/10 01:27:13 - mmengine - INFO - Epoch(val)  [30][2450/2912]    eta: 0:00:10  time: 0.0217  data_time: 0.0012  memory: 760  
2023/02/10 01:27:14 - mmengine - INFO - Epoch(val)  [30][2500/2912]    eta: 0:00:09  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:27:15 - mmengine - INFO - Epoch(val)  [30][2550/2912]    eta: 0:00:07  time: 0.0219  data_time: 0.0012  memory: 761  
2023/02/10 01:27:16 - mmengine - INFO - Epoch(val)  [30][2600/2912]    eta: 0:00:06  time: 0.0218  data_time: 0.0012  memory: 761  
2023/02/10 01:27:17 - mmengine - INFO - Epoch(val)  [30][2650/2912]    eta: 0:00:05  time: 0.0219  data_time: 0.0012  memory: 762  
2023/02/10 01:27:18 - mmengine - INFO - Epoch(val)  [30][2700/2912]    eta: 0:00:04  time: 0.0220  data_time: 0.0012  memory: 762  
2023/02/10 01:27:19 - mmengine - INFO - Epoch(val)  [30][2750/2912]    eta: 0:00:03  time: 0.0219  data_time: 0.0012  memory: 761  
2023/02/10 01:27:20 - mmengine - INFO - Epoch(val)  [30][2800/2912]    eta: 0:00:02  time: 0.0217  data_time: 0.0012  memory: 761  
2023/02/10 01:27:21 - mmengine - INFO - Epoch(val)  [30][2850/2912]    eta: 0:00:01  time: 0.0220  data_time: 0.0012  memory: 762  
2023/02/10 01:27:23 - mmengine - INFO - Epoch(val)  [30][2900/2912]    eta: 0:00:00  time: 0.0218  data_time: 0.0012  memory: 762  
2023/02/10 01:27:24 - mmengine - INFO - 
---------------iou_thr: 0.5---------------
2023/02/10 01:27:27 - mmengine - INFO - 
+-------------+------+-------+--------+-------+
| class       | gts  | dets  | recall | ap    |
+-------------+------+-------+--------+-------+
| aeroplane   | 433  | 1187  | 0.926  | 0.898 |
| bicycle     | 358  | 1217  | 0.933  | 0.871 |
| bird        | 559  | 1223  | 0.934  | 0.895 |
| boat        | 424  | 1854  | 0.887  | 0.750 |
| bottle      | 630  | 2726  | 0.878  | 0.740 |
| bus         | 301  | 1093  | 0.957  | 0.897 |
| car         | 1004 | 3531  | 0.915  | 0.843 |
| cat         | 612  | 1239  | 0.985  | 0.976 |
| chair       | 1176 | 6533  | 0.891  | 0.715 |
| cow         | 298  | 1048  | 0.966  | 0.877 |
| diningtable | 305  | 2028  | 0.836  | 0.682 |
| dog         | 759  | 1724  | 0.978  | 0.958 |
| horse       | 360  | 1034  | 0.953  | 0.909 |
| motorbike   | 356  | 1255  | 0.955  | 0.898 |
| person      | 4372 | 13127 | 0.943  | 0.894 |
| pottedplant | 489  | 2716  | 0.847  | 0.648 |
| sheep       | 413  | 1060  | 0.908  | 0.873 |
| sofa        | 285  | 1424  | 0.940  | 0.737 |
| train       | 315  | 929   | 0.952  | 0.921 |
| tvmonitor   | 392  | 1195  | 0.893  | 0.845 |
+-------------+------+-------+--------+-------+
| mAP         |      |       |        | 0.841 |
+-------------+------+-------+--------+-------+
2023/02/10 01:27:27 - mmengine - INFO - Epoch(val) [30][2912/2912]  pascal_voc/mAP: 0.8415  pascal_voc/AP50: 0.8410
2023/02/10 01:28:04 - mmengine - INFO - Epoch(train)  [31][ 50/179]  lr: 2.0000e-04  eta: 2:35:34  time: 0.7450  data_time: 0.0151  memory: 6893  loss: 0.2340  loss_rpn_cls: 0.0077  loss_rpn_bbox: 0.0107  loss_cls: 0.0795  acc: 96.3135  loss_bbox: 0.1361
2023/02/10 01:28:41 - mmengine - INFO - Epoch(train)  [31][100/179]  lr: 2.0000e-04  eta: 2:34:56  time: 0.7431  data_time: 0.0134  memory: 6893  loss: 0.2493  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0115  loss_cls: 0.0853  acc: 97.8149  loss_bbox: 0.1435
2023/02/10 01:29:18 - mmengine - INFO - Epoch(train)  [31][150/179]  lr: 2.0000e-04  eta: 2:34:18  time: 0.7447  data_time: 0.0133  memory: 6893  loss: 0.2486  loss_rpn_cls: 0.0084  loss_rpn_bbox: 0.0119  loss_cls: 0.0850  acc: 96.2646  loss_bbox: 0.1433
2023/02/10 01:29:40 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
2023/02/10 01:30:17 - mmengine - INFO - Epoch(train)  [32][ 50/179]  lr: 2.0000e-04  eta: 2:33:19  time: 0.7506  data_time: 0.0152  memory: 6919  loss: 0.2451  loss_rpn_cls: 0.0091  loss_rpn_bbox: 0.0110  loss_cls: 0.0834  acc: 96.2646  loss_bbox: 0.1415
2023/02/10 01:30:55 - mmengine - INFO - Epoch(train)  [32][100/179]  lr: 2.0000e-04  eta: 2:32:42  time: 0.7480  data_time: 0.0134  memory: 6893  loss: 0.2437  loss_rpn_cls: 0.0086  loss_rpn_bbox: 0.0117  loss_cls: 0.0833  acc: 97.1558  loss_bbox: 0.1401
2023/02/10 01:31:32 - mmengine - INFO - Epoch(train)  [32][150/179]  lr: 2.0000e-04  eta: 2:32:05  time: 0.7479  data_time: 0.0134  memory: 6893  loss: 0.2379  loss_rpn_cls: 0.0079  loss_rpn_bbox: 0.0111  loss_cls: 0.0805  acc: 96.3623  loss_bbox: 0.1385
2023/02/10 01:31:54 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_voc0712_20230210_001548
