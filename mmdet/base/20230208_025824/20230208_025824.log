2023/02/08 02:58:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.7.0 | packaged by conda-forge | (default, Nov 12 2018, 20:15:55) [GCC 7.3.0]
    CUDA available: True
    numpy_random_seed: 1458265123
    GPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-16GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.74
    GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-16)
    PyTorch: 1.8.0+cu111
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.9.0+cu111
    OpenCV: 4.7.0
    MMEngine: 0.4.0

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/02/08 02:58:24 - mmengine - INFO - Config:
dataset_type = 'BalloonDataset'
data_root = 'data/balloon/'
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', scale=(1024, 768), keep_ratio=True),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(type='Resize', scale=(1024, 768), keep_ratio=True),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=2,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    dataset=dict(
        type='BalloonDataset',
        data_root='data/balloon/',
        ann_file='train.json',
        data_prefix=dict(img='train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', scale=(1024, 768), keep_ratio=True),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PackDetInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='BalloonDataset',
        data_root='data/balloon/',
        ann_file='val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='Resize', scale=(1024, 768), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='BalloonDataset',
        data_root='data/balloon/',
        ann_file='val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(backend='disk')),
            dict(type='Resize', scale=(1024, 768), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ]))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='data/balloon/val.json',
    metric=['bbox', 'segm'],
    format_only=False)
test_evaluator = dict(
    type='CocoMetric',
    ann_file='data/balloon/val.json',
    metric=['bbox', 'segm'],
    format_only=False)
model = dict(
    type='MaskRCNN',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_mask=True,
        pad_size_divisor=32),
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=1,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=1),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='WandbVisBackend'), dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='WandbVisBackend'),
                  dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'checkpoints/mask_rcnn_r50_fpn_mstrain-poly_3x_coco_20210524_201154-21b550bb.pth'
resume = False
train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=48, val_interval=1)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0, end=500),
    dict(
        type='MultiStepLR',
        begin=0,
        end=12,
        by_epoch=True,
        milestones=[9, 11],
        gamma=0.1)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001))
auto_scale_lr = dict(enable=False, base_batch_size=2)
launcher = 'none'
work_dir = './work_dirs/mask-rcnn_r50_fpn_ms-poly-3x_balloon'

2023/02/08 02:58:24 - mmengine - WARNING - The "visualizer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:24 - mmengine - WARNING - The "vis_backend" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:42 - mmengine - WARNING - The "model" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:43 - mmengine - WARNING - The "task util" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/02/08 02:58:48 - mmengine - WARNING - The "hook" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/02/08 02:58:48 - mmengine - WARNING - The "loop" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:48 - mmengine - WARNING - The "dataset" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:48 - mmengine - WARNING - The "transform" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "data sampler" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "optimizer constructor" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "optimizer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "optim_wrapper" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "parameter scheduler" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "metric" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - WARNING - The "weight initializer" registry in mmdet did not set import location. Fallback to call `mmdet.utils.register_all_modules` instead.
2023/02/08 02:58:49 - mmengine - INFO - load model from: torchvision://resnet50
2023/02/08 02:58:49 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2023/02/08 02:58:49 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  
2023/02/08 02:58:50 - mmengine - INFO - Load checkpoint from checkpoints/mask_rcnn_r50_fpn_mstrain-poly_3x_coco_20210524_201154-21b550bb.pth
2023/02/08 02:58:50 - mmengine - INFO - Checkpoints will be saved to /home/haida_niejie/work/yyl/mmdetection-3.0.0rc5/work_dirs/mask-rcnn_r50_fpn_ms-poly-3x_balloon.
2023/02/08 02:59:01 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 02:59:01 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/02/08 02:59:11 - mmengine - INFO - Evaluating bbox...
2023/02/08 02:59:11 - mmengine - INFO - bbox_mAP_copypaste: 0.183 0.390 0.150 0.000 0.050 0.236
2023/02/08 02:59:11 - mmengine - INFO - Evaluating segm...
2023/02/08 02:59:11 - mmengine - INFO - segm_mAP_copypaste: 0.201 0.350 0.204 0.000 0.086 0.258
2023/02/08 02:59:11 - mmengine - INFO - Epoch(val) [1][13/13]  coco/bbox_mAP: 0.1830  coco/bbox_mAP_50: 0.3900  coco/bbox_mAP_75: 0.1500  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.0500  coco/bbox_mAP_l: 0.2360  coco/segm_mAP: 0.2010  coco/segm_mAP_50: 0.3500  coco/segm_mAP_75: 0.2040  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.0860  coco/segm_mAP_l: 0.2580
2023/02/08 02:59:21 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 02:59:21 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/02/08 02:59:28 - mmengine - INFO - Evaluating bbox...
2023/02/08 02:59:28 - mmengine - INFO - bbox_mAP_copypaste: 0.524 0.740 0.614 0.000 0.330 0.602
2023/02/08 02:59:28 - mmengine - INFO - Evaluating segm...
2023/02/08 02:59:28 - mmengine - INFO - segm_mAP_copypaste: 0.609 0.740 0.692 0.016 0.330 0.701
2023/02/08 02:59:28 - mmengine - INFO - Epoch(val) [2][13/13]  coco/bbox_mAP: 0.5240  coco/bbox_mAP_50: 0.7400  coco/bbox_mAP_75: 0.6140  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.3300  coco/bbox_mAP_l: 0.6020  coco/segm_mAP: 0.6090  coco/segm_mAP_50: 0.7400  coco/segm_mAP_75: 0.6920  coco/segm_mAP_s: 0.0160  coco/segm_mAP_m: 0.3300  coco/segm_mAP_l: 0.7010
2023/02/08 02:59:38 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 02:59:38 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/02/08 02:59:42 - mmengine - INFO - Evaluating bbox...
2023/02/08 02:59:42 - mmengine - INFO - bbox_mAP_copypaste: 0.534 0.743 0.635 0.000 0.440 0.606
2023/02/08 02:59:42 - mmengine - INFO - Evaluating segm...
2023/02/08 02:59:42 - mmengine - INFO - segm_mAP_copypaste: 0.625 0.743 0.734 0.000 0.457 0.718
2023/02/08 02:59:42 - mmengine - INFO - Epoch(val) [3][13/13]  coco/bbox_mAP: 0.5340  coco/bbox_mAP_50: 0.7430  coco/bbox_mAP_75: 0.6350  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4400  coco/bbox_mAP_l: 0.6060  coco/segm_mAP: 0.6250  coco/segm_mAP_50: 0.7430  coco/segm_mAP_75: 0.7340  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4570  coco/segm_mAP_l: 0.7180
2023/02/08 02:59:51 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 02:59:51 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/02/08 02:59:55 - mmengine - INFO - Evaluating bbox...
2023/02/08 02:59:55 - mmengine - INFO - bbox_mAP_copypaste: 0.650 0.796 0.741 0.000 0.434 0.736
2023/02/08 02:59:55 - mmengine - INFO - Evaluating segm...
2023/02/08 02:59:55 - mmengine - INFO - segm_mAP_copypaste: 0.687 0.796 0.769 0.000 0.438 0.779
2023/02/08 02:59:55 - mmengine - INFO - Epoch(val) [4][13/13]  coco/bbox_mAP: 0.6500  coco/bbox_mAP_50: 0.7960  coco/bbox_mAP_75: 0.7410  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4340  coco/bbox_mAP_l: 0.7360  coco/segm_mAP: 0.6870  coco/segm_mAP_50: 0.7960  coco/segm_mAP_75: 0.7690  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4380  coco/segm_mAP_l: 0.7790
2023/02/08 03:00:05 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:00:05 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/02/08 03:00:09 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:00:09 - mmengine - INFO - bbox_mAP_copypaste: 0.643 0.853 0.830 0.101 0.621 0.679
2023/02/08 03:00:09 - mmengine - INFO - Evaluating segm...
2023/02/08 03:00:09 - mmengine - INFO - segm_mAP_copypaste: 0.727 0.858 0.817 0.101 0.661 0.783
2023/02/08 03:00:09 - mmengine - INFO - Epoch(val) [5][13/13]  coco/bbox_mAP: 0.6430  coco/bbox_mAP_50: 0.8530  coco/bbox_mAP_75: 0.8300  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.6210  coco/bbox_mAP_l: 0.6790  coco/segm_mAP: 0.7270  coco/segm_mAP_50: 0.8580  coco/segm_mAP_75: 0.8170  coco/segm_mAP_s: 0.1010  coco/segm_mAP_m: 0.6610  coco/segm_mAP_l: 0.7830
2023/02/08 03:00:19 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:00:19 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/02/08 03:00:23 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:00:23 - mmengine - INFO - bbox_mAP_copypaste: 0.641 0.810 0.776 0.000 0.505 0.722
2023/02/08 03:00:23 - mmengine - INFO - Evaluating segm...
2023/02/08 03:00:23 - mmengine - INFO - segm_mAP_copypaste: 0.689 0.810 0.770 0.000 0.486 0.782
2023/02/08 03:00:23 - mmengine - INFO - Epoch(val) [6][13/13]  coco/bbox_mAP: 0.6410  coco/bbox_mAP_50: 0.8100  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5050  coco/bbox_mAP_l: 0.7220  coco/segm_mAP: 0.6890  coco/segm_mAP_50: 0.8100  coco/segm_mAP_75: 0.7700  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4860  coco/segm_mAP_l: 0.7820
2023/02/08 03:00:33 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:00:33 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/02/08 03:00:36 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:00:36 - mmengine - INFO - bbox_mAP_copypaste: 0.583 0.770 0.712 0.000 0.398 0.661
2023/02/08 03:00:36 - mmengine - INFO - Evaluating segm...
2023/02/08 03:00:37 - mmengine - INFO - segm_mAP_copypaste: 0.689 0.774 0.755 0.000 0.424 0.789
2023/02/08 03:00:37 - mmengine - INFO - Epoch(val) [7][13/13]  coco/bbox_mAP: 0.5830  coco/bbox_mAP_50: 0.7700  coco/bbox_mAP_75: 0.7120  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.3980  coco/bbox_mAP_l: 0.6610  coco/segm_mAP: 0.6890  coco/segm_mAP_50: 0.7740  coco/segm_mAP_75: 0.7550  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4240  coco/segm_mAP_l: 0.7890
2023/02/08 03:00:46 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:00:46 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/02/08 03:00:50 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:00:50 - mmengine - INFO - bbox_mAP_copypaste: 0.665 0.845 0.817 0.000 0.532 0.735
2023/02/08 03:00:50 - mmengine - INFO - Evaluating segm...
2023/02/08 03:00:50 - mmengine - INFO - segm_mAP_copypaste: 0.769 0.854 0.838 0.202 0.598 0.852
2023/02/08 03:00:50 - mmengine - INFO - Epoch(val) [8][13/13]  coco/bbox_mAP: 0.6650  coco/bbox_mAP_50: 0.8450  coco/bbox_mAP_75: 0.8170  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5320  coco/bbox_mAP_l: 0.7350  coco/segm_mAP: 0.7690  coco/segm_mAP_50: 0.8540  coco/segm_mAP_75: 0.8380  coco/segm_mAP_s: 0.2020  coco/segm_mAP_m: 0.5980  coco/segm_mAP_l: 0.8520
2023/02/08 03:01:00 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:01:00 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/02/08 03:01:03 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:01:03 - mmengine - INFO - bbox_mAP_copypaste: 0.616 0.793 0.754 0.000 0.480 0.689
2023/02/08 03:01:03 - mmengine - INFO - Evaluating segm...
2023/02/08 03:01:03 - mmengine - INFO - segm_mAP_copypaste: 0.701 0.793 0.763 0.000 0.535 0.783
2023/02/08 03:01:03 - mmengine - INFO - Epoch(val) [9][13/13]  coco/bbox_mAP: 0.6160  coco/bbox_mAP_50: 0.7930  coco/bbox_mAP_75: 0.7540  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4800  coco/bbox_mAP_l: 0.6890  coco/segm_mAP: 0.7010  coco/segm_mAP_50: 0.7930  coco/segm_mAP_75: 0.7630  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5350  coco/segm_mAP_l: 0.7830
2023/02/08 03:01:13 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:01:13 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/02/08 03:01:16 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:01:17 - mmengine - INFO - bbox_mAP_copypaste: 0.666 0.803 0.758 0.000 0.480 0.754
2023/02/08 03:01:17 - mmengine - INFO - Evaluating segm...
2023/02/08 03:01:17 - mmengine - INFO - segm_mAP_copypaste: 0.723 0.803 0.756 0.000 0.519 0.812
2023/02/08 03:01:17 - mmengine - INFO - Epoch(val) [10][13/13]  coco/bbox_mAP: 0.6660  coco/bbox_mAP_50: 0.8030  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4800  coco/bbox_mAP_l: 0.7540  coco/segm_mAP: 0.7230  coco/segm_mAP_50: 0.8030  coco/segm_mAP_75: 0.7560  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5190  coco/segm_mAP_l: 0.8120
2023/02/08 03:01:26 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:01:26 - mmengine - INFO - Saving checkpoint at 11 epochs
2023/02/08 03:01:30 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:01:30 - mmengine - INFO - bbox_mAP_copypaste: 0.674 0.804 0.744 0.000 0.468 0.767
2023/02/08 03:01:30 - mmengine - INFO - Evaluating segm...
2023/02/08 03:01:30 - mmengine - INFO - segm_mAP_copypaste: 0.727 0.804 0.797 0.000 0.522 0.820
2023/02/08 03:01:30 - mmengine - INFO - Epoch(val) [11][13/13]  coco/bbox_mAP: 0.6740  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7440  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4680  coco/bbox_mAP_l: 0.7670  coco/segm_mAP: 0.7270  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7970  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5220  coco/segm_mAP_l: 0.8200
2023/02/08 03:01:40 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:01:40 - mmengine - INFO - Saving checkpoint at 12 epochs
2023/02/08 03:01:43 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:01:43 - mmengine - INFO - bbox_mAP_copypaste: 0.681 0.804 0.744 0.000 0.490 0.770
2023/02/08 03:01:43 - mmengine - INFO - Evaluating segm...
2023/02/08 03:01:43 - mmengine - INFO - segm_mAP_copypaste: 0.732 0.804 0.797 0.000 0.523 0.826
2023/02/08 03:01:43 - mmengine - INFO - Epoch(val) [12][13/13]  coco/bbox_mAP: 0.6810  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7440  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4900  coco/bbox_mAP_l: 0.7700  coco/segm_mAP: 0.7320  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7970  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5230  coco/segm_mAP_l: 0.8260
2023/02/08 03:01:53 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:01:53 - mmengine - INFO - Saving checkpoint at 13 epochs
2023/02/08 03:01:57 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:01:57 - mmengine - INFO - bbox_mAP_copypaste: 0.687 0.804 0.760 0.000 0.490 0.778
2023/02/08 03:01:57 - mmengine - INFO - Evaluating segm...
2023/02/08 03:01:57 - mmengine - INFO - segm_mAP_copypaste: 0.736 0.804 0.797 0.000 0.524 0.829
2023/02/08 03:01:57 - mmengine - INFO - Epoch(val) [13][13/13]  coco/bbox_mAP: 0.6870  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7600  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4900  coco/bbox_mAP_l: 0.7780  coco/segm_mAP: 0.7360  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7970  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5240  coco/segm_mAP_l: 0.8290
2023/02/08 03:02:06 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:02:06 - mmengine - INFO - Saving checkpoint at 14 epochs
2023/02/08 03:02:10 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:02:10 - mmengine - INFO - bbox_mAP_copypaste: 0.681 0.801 0.758 0.000 0.490 0.773
2023/02/08 03:02:10 - mmengine - INFO - Evaluating segm...
2023/02/08 03:02:10 - mmengine - INFO - segm_mAP_copypaste: 0.730 0.801 0.794 0.000 0.521 0.823
2023/02/08 03:02:10 - mmengine - INFO - Epoch(val) [14][13/13]  coco/bbox_mAP: 0.6810  coco/bbox_mAP_50: 0.8010  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4900  coco/bbox_mAP_l: 0.7730  coco/segm_mAP: 0.7300  coco/segm_mAP_50: 0.8010  coco/segm_mAP_75: 0.7940  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5210  coco/segm_mAP_l: 0.8230
2023/02/08 03:02:20 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:02:20 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/02/08 03:02:24 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:02:24 - mmengine - INFO - bbox_mAP_copypaste: 0.680 0.801 0.758 0.000 0.490 0.771
2023/02/08 03:02:24 - mmengine - INFO - Evaluating segm...
2023/02/08 03:02:24 - mmengine - INFO - segm_mAP_copypaste: 0.733 0.801 0.794 0.000 0.521 0.826
2023/02/08 03:02:24 - mmengine - INFO - Epoch(val) [15][13/13]  coco/bbox_mAP: 0.6800  coco/bbox_mAP_50: 0.8010  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4900  coco/bbox_mAP_l: 0.7710  coco/segm_mAP: 0.7330  coco/segm_mAP_50: 0.8010  coco/segm_mAP_75: 0.7940  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5210  coco/segm_mAP_l: 0.8260
2023/02/08 03:02:34 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:02:34 - mmengine - INFO - Saving checkpoint at 16 epochs
2023/02/08 03:02:37 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:02:37 - mmengine - INFO - bbox_mAP_copypaste: 0.677 0.801 0.758 0.000 0.480 0.770
2023/02/08 03:02:37 - mmengine - INFO - Evaluating segm...
2023/02/08 03:02:37 - mmengine - INFO - segm_mAP_copypaste: 0.731 0.801 0.794 0.000 0.520 0.826
2023/02/08 03:02:37 - mmengine - INFO - Epoch(val) [16][13/13]  coco/bbox_mAP: 0.6770  coco/bbox_mAP_50: 0.8010  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4800  coco/bbox_mAP_l: 0.7700  coco/segm_mAP: 0.7310  coco/segm_mAP_50: 0.8010  coco/segm_mAP_75: 0.7940  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5200  coco/segm_mAP_l: 0.8260
2023/02/08 03:02:47 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:02:47 - mmengine - INFO - Saving checkpoint at 17 epochs
2023/02/08 03:02:50 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:02:50 - mmengine - INFO - bbox_mAP_copypaste: 0.678 0.800 0.757 0.000 0.488 0.768
2023/02/08 03:02:50 - mmengine - INFO - Evaluating segm...
2023/02/08 03:02:50 - mmengine - INFO - segm_mAP_copypaste: 0.725 0.800 0.779 0.000 0.503 0.818
2023/02/08 03:02:50 - mmengine - INFO - Epoch(val) [17][13/13]  coco/bbox_mAP: 0.6780  coco/bbox_mAP_50: 0.8000  coco/bbox_mAP_75: 0.7570  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4880  coco/bbox_mAP_l: 0.7680  coco/segm_mAP: 0.7250  coco/segm_mAP_50: 0.8000  coco/segm_mAP_75: 0.7790  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5030  coco/segm_mAP_l: 0.8180
2023/02/08 03:03:00 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:03:00 - mmengine - INFO - Saving checkpoint at 18 epochs
2023/02/08 03:03:04 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:03:04 - mmengine - INFO - bbox_mAP_copypaste: 0.675 0.800 0.757 0.000 0.482 0.765
2023/02/08 03:03:04 - mmengine - INFO - Evaluating segm...
2023/02/08 03:03:04 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.800 0.779 0.000 0.511 0.820
2023/02/08 03:03:04 - mmengine - INFO - Epoch(val) [18][13/13]  coco/bbox_mAP: 0.6750  coco/bbox_mAP_50: 0.8000  coco/bbox_mAP_75: 0.7570  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4820  coco/bbox_mAP_l: 0.7650  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.8000  coco/segm_mAP_75: 0.7790  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5110  coco/segm_mAP_l: 0.8200
2023/02/08 03:03:13 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:03:13 - mmengine - INFO - Saving checkpoint at 19 epochs
2023/02/08 03:03:17 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:03:17 - mmengine - INFO - bbox_mAP_copypaste: 0.680 0.799 0.756 0.000 0.482 0.771
2023/02/08 03:03:17 - mmengine - INFO - Evaluating segm...
2023/02/08 03:03:17 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.799 0.778 0.000 0.517 0.819
2023/02/08 03:03:17 - mmengine - INFO - Epoch(val) [19][13/13]  coco/bbox_mAP: 0.6800  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.7560  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4820  coco/bbox_mAP_l: 0.7710  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.7990  coco/segm_mAP_75: 0.7780  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5170  coco/segm_mAP_l: 0.8190
2023/02/08 03:03:26 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:03:26 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/02/08 03:03:30 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:03:30 - mmengine - INFO - bbox_mAP_copypaste: 0.687 0.801 0.758 0.000 0.482 0.782
2023/02/08 03:03:30 - mmengine - INFO - Evaluating segm...
2023/02/08 03:03:30 - mmengine - INFO - segm_mAP_copypaste: 0.730 0.801 0.780 0.000 0.517 0.824
2023/02/08 03:03:30 - mmengine - INFO - Epoch(val) [20][13/13]  coco/bbox_mAP: 0.6870  coco/bbox_mAP_50: 0.8010  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4820  coco/bbox_mAP_l: 0.7820  coco/segm_mAP: 0.7300  coco/segm_mAP_50: 0.8010  coco/segm_mAP_75: 0.7800  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5170  coco/segm_mAP_l: 0.8240
2023/02/08 03:03:40 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:03:40 - mmengine - INFO - Saving checkpoint at 21 epochs
2023/02/08 03:03:43 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:03:43 - mmengine - INFO - bbox_mAP_copypaste: 0.683 0.799 0.756 0.000 0.495 0.772
2023/02/08 03:03:43 - mmengine - INFO - Evaluating segm...
2023/02/08 03:03:43 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.799 0.778 0.000 0.514 0.820
2023/02/08 03:03:43 - mmengine - INFO - Epoch(val) [21][13/13]  coco/bbox_mAP: 0.6830  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.7560  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4950  coco/bbox_mAP_l: 0.7720  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.7990  coco/segm_mAP_75: 0.7780  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5140  coco/segm_mAP_l: 0.8200
2023/02/08 03:03:53 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:03:53 - mmengine - INFO - Saving checkpoint at 22 epochs
2023/02/08 03:03:57 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:03:57 - mmengine - INFO - bbox_mAP_copypaste: 0.685 0.797 0.776 0.000 0.504 0.770
2023/02/08 03:03:57 - mmengine - INFO - Evaluating segm...
2023/02/08 03:03:57 - mmengine - INFO - segm_mAP_copypaste: 0.724 0.797 0.776 0.000 0.506 0.817
2023/02/08 03:03:57 - mmengine - INFO - Epoch(val) [22][13/13]  coco/bbox_mAP: 0.6850  coco/bbox_mAP_50: 0.7970  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5040  coco/bbox_mAP_l: 0.7700  coco/segm_mAP: 0.7240  coco/segm_mAP_50: 0.7970  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5060  coco/segm_mAP_l: 0.8170
2023/02/08 03:04:07 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:04:07 - mmengine - INFO - Saving checkpoint at 23 epochs
2023/02/08 03:04:10 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:04:10 - mmengine - INFO - bbox_mAP_copypaste: 0.686 0.797 0.776 0.000 0.507 0.772
2023/02/08 03:04:10 - mmengine - INFO - Evaluating segm...
2023/02/08 03:04:10 - mmengine - INFO - segm_mAP_copypaste: 0.724 0.797 0.776 0.000 0.503 0.818
2023/02/08 03:04:10 - mmengine - INFO - Epoch(val) [23][13/13]  coco/bbox_mAP: 0.6860  coco/bbox_mAP_50: 0.7970  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5070  coco/bbox_mAP_l: 0.7720  coco/segm_mAP: 0.7240  coco/segm_mAP_50: 0.7970  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5030  coco/segm_mAP_l: 0.8180
2023/02/08 03:04:20 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:04:20 - mmengine - INFO - Saving checkpoint at 24 epochs
2023/02/08 03:04:23 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:04:23 - mmengine - INFO - bbox_mAP_copypaste: 0.679 0.797 0.776 0.000 0.501 0.764
2023/02/08 03:04:23 - mmengine - INFO - Evaluating segm...
2023/02/08 03:04:23 - mmengine - INFO - segm_mAP_copypaste: 0.725 0.797 0.776 0.000 0.501 0.820
2023/02/08 03:04:23 - mmengine - INFO - Epoch(val) [24][13/13]  coco/bbox_mAP: 0.6790  coco/bbox_mAP_50: 0.7970  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5010  coco/bbox_mAP_l: 0.7640  coco/segm_mAP: 0.7250  coco/segm_mAP_50: 0.7970  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5010  coco/segm_mAP_l: 0.8200
2023/02/08 03:04:33 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:04:33 - mmengine - INFO - Saving checkpoint at 25 epochs
2023/02/08 03:04:37 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:04:37 - mmengine - INFO - bbox_mAP_copypaste: 0.688 0.798 0.776 0.000 0.507 0.772
2023/02/08 03:04:37 - mmengine - INFO - Evaluating segm...
2023/02/08 03:04:37 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.798 0.776 0.000 0.499 0.820
2023/02/08 03:04:37 - mmengine - INFO - Epoch(val) [25][13/13]  coco/bbox_mAP: 0.6880  coco/bbox_mAP_50: 0.7980  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5070  coco/bbox_mAP_l: 0.7720  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.7980  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4990  coco/segm_mAP_l: 0.8200
2023/02/08 03:04:46 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:04:46 - mmengine - INFO - Saving checkpoint at 26 epochs
2023/02/08 03:04:50 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:04:50 - mmengine - INFO - bbox_mAP_copypaste: 0.689 0.799 0.777 0.000 0.510 0.775
2023/02/08 03:04:50 - mmengine - INFO - Evaluating segm...
2023/02/08 03:04:50 - mmengine - INFO - segm_mAP_copypaste: 0.725 0.799 0.777 0.000 0.498 0.821
2023/02/08 03:04:50 - mmengine - INFO - Epoch(val) [26][13/13]  coco/bbox_mAP: 0.6890  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.7770  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5100  coco/bbox_mAP_l: 0.7750  coco/segm_mAP: 0.7250  coco/segm_mAP_50: 0.7990  coco/segm_mAP_75: 0.7770  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4980  coco/segm_mAP_l: 0.8210
2023/02/08 03:04:59 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:04:59 - mmengine - INFO - Saving checkpoint at 27 epochs
2023/02/08 03:05:03 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:05:03 - mmengine - INFO - bbox_mAP_copypaste: 0.685 0.798 0.776 0.000 0.498 0.773
2023/02/08 03:05:03 - mmengine - INFO - Evaluating segm...
2023/02/08 03:05:03 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.798 0.776 0.000 0.503 0.822
2023/02/08 03:05:03 - mmengine - INFO - Epoch(val) [27][13/13]  coco/bbox_mAP: 0.6850  coco/bbox_mAP_50: 0.7980  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4980  coco/bbox_mAP_l: 0.7730  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.7980  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5030  coco/segm_mAP_l: 0.8220
2023/02/08 03:05:12 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:05:12 - mmengine - INFO - Saving checkpoint at 28 epochs
2023/02/08 03:05:16 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:05:16 - mmengine - INFO - bbox_mAP_copypaste: 0.685 0.798 0.776 0.000 0.510 0.771
2023/02/08 03:05:16 - mmengine - INFO - Evaluating segm...
2023/02/08 03:05:16 - mmengine - INFO - segm_mAP_copypaste: 0.725 0.798 0.776 0.000 0.503 0.824
2023/02/08 03:05:16 - mmengine - INFO - Epoch(val) [28][13/13]  coco/bbox_mAP: 0.6850  coco/bbox_mAP_50: 0.7980  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5100  coco/bbox_mAP_l: 0.7710  coco/segm_mAP: 0.7250  coco/segm_mAP_50: 0.7980  coco/segm_mAP_75: 0.7760  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5030  coco/segm_mAP_l: 0.8240
2023/02/08 03:05:26 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:05:26 - mmengine - INFO - Saving checkpoint at 29 epochs
2023/02/08 03:05:29 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:05:29 - mmengine - INFO - bbox_mAP_copypaste: 0.689 0.799 0.777 0.000 0.510 0.776
2023/02/08 03:05:29 - mmengine - INFO - Evaluating segm...
2023/02/08 03:05:29 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.799 0.777 0.000 0.503 0.825
2023/02/08 03:05:29 - mmengine - INFO - Epoch(val) [29][13/13]  coco/bbox_mAP: 0.6890  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.7770  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5100  coco/bbox_mAP_l: 0.7760  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.7990  coco/segm_mAP_75: 0.7770  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5030  coco/segm_mAP_l: 0.8250
2023/02/08 03:05:39 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:05:39 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/02/08 03:05:42 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:05:42 - mmengine - INFO - bbox_mAP_copypaste: 0.676 0.788 0.760 0.000 0.473 0.774
2023/02/08 03:05:42 - mmengine - INFO - Evaluating segm...
2023/02/08 03:05:42 - mmengine - INFO - segm_mAP_copypaste: 0.715 0.788 0.760 0.000 0.462 0.826
2023/02/08 03:05:42 - mmengine - INFO - Epoch(val) [30][13/13]  coco/bbox_mAP: 0.6760  coco/bbox_mAP_50: 0.7880  coco/bbox_mAP_75: 0.7600  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4730  coco/bbox_mAP_l: 0.7740  coco/segm_mAP: 0.7150  coco/segm_mAP_50: 0.7880  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4620  coco/segm_mAP_l: 0.8260
2023/02/08 03:05:52 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:05:52 - mmengine - INFO - Saving checkpoint at 31 epochs
2023/02/08 03:05:56 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:05:56 - mmengine - INFO - bbox_mAP_copypaste: 0.676 0.786 0.758 0.000 0.473 0.773
2023/02/08 03:05:56 - mmengine - INFO - Evaluating segm...
2023/02/08 03:05:56 - mmengine - INFO - segm_mAP_copypaste: 0.713 0.786 0.758 0.000 0.465 0.824
2023/02/08 03:05:56 - mmengine - INFO - Epoch(val) [31][13/13]  coco/bbox_mAP: 0.6760  coco/bbox_mAP_50: 0.7860  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4730  coco/bbox_mAP_l: 0.7730  coco/segm_mAP: 0.7130  coco/segm_mAP_50: 0.7860  coco/segm_mAP_75: 0.7580  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4650  coco/segm_mAP_l: 0.8240
2023/02/08 03:06:05 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:05 - mmengine - INFO - Saving checkpoint at 32 epochs
2023/02/08 03:06:09 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:06:09 - mmengine - INFO - bbox_mAP_copypaste: 0.678 0.789 0.761 0.000 0.462 0.779
2023/02/08 03:06:09 - mmengine - INFO - Evaluating segm...
2023/02/08 03:06:09 - mmengine - INFO - segm_mAP_copypaste: 0.716 0.789 0.761 0.000 0.469 0.826
2023/02/08 03:06:09 - mmengine - INFO - Epoch(val) [32][13/13]  coco/bbox_mAP: 0.6780  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7610  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4620  coco/bbox_mAP_l: 0.7790  coco/segm_mAP: 0.7160  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7610  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8260
2023/02/08 03:06:12 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:19 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:19 - mmengine - INFO - Saving checkpoint at 33 epochs
2023/02/08 03:06:22 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:06:22 - mmengine - INFO - bbox_mAP_copypaste: 0.679 0.789 0.760 0.000 0.473 0.777
2023/02/08 03:06:22 - mmengine - INFO - Evaluating segm...
2023/02/08 03:06:22 - mmengine - INFO - segm_mAP_copypaste: 0.718 0.789 0.760 0.000 0.474 0.826
2023/02/08 03:06:22 - mmengine - INFO - Epoch(val) [33][13/13]  coco/bbox_mAP: 0.6790  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7600  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4730  coco/bbox_mAP_l: 0.7770  coco/segm_mAP: 0.7180  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4740  coco/segm_mAP_l: 0.8260
2023/02/08 03:06:32 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:32 - mmengine - INFO - Saving checkpoint at 34 epochs
2023/02/08 03:06:35 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:06:35 - mmengine - INFO - bbox_mAP_copypaste: 0.679 0.789 0.760 0.000 0.474 0.777
2023/02/08 03:06:35 - mmengine - INFO - Evaluating segm...
2023/02/08 03:06:35 - mmengine - INFO - segm_mAP_copypaste: 0.716 0.789 0.760 0.000 0.469 0.827
2023/02/08 03:06:35 - mmengine - INFO - Epoch(val) [34][13/13]  coco/bbox_mAP: 0.6790  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7600  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4740  coco/bbox_mAP_l: 0.7770  coco/segm_mAP: 0.7160  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8270
2023/02/08 03:06:45 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:45 - mmengine - INFO - Saving checkpoint at 35 epochs
2023/02/08 03:06:48 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:06:48 - mmengine - INFO - bbox_mAP_copypaste: 0.680 0.789 0.744 0.000 0.474 0.779
2023/02/08 03:06:48 - mmengine - INFO - Evaluating segm...
2023/02/08 03:06:48 - mmengine - INFO - segm_mAP_copypaste: 0.715 0.789 0.760 0.000 0.469 0.825
2023/02/08 03:06:48 - mmengine - INFO - Epoch(val) [35][13/13]  coco/bbox_mAP: 0.6800  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7440  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4740  coco/bbox_mAP_l: 0.7790  coco/segm_mAP: 0.7150  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8250
2023/02/08 03:06:58 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:06:58 - mmengine - INFO - Saving checkpoint at 36 epochs
2023/02/08 03:07:01 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:07:01 - mmengine - INFO - bbox_mAP_copypaste: 0.683 0.789 0.745 0.000 0.469 0.784
2023/02/08 03:07:01 - mmengine - INFO - Evaluating segm...
2023/02/08 03:07:02 - mmengine - INFO - segm_mAP_copypaste: 0.715 0.789 0.761 0.000 0.469 0.823
2023/02/08 03:07:02 - mmengine - INFO - Epoch(val) [36][13/13]  coco/bbox_mAP: 0.6830  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7450  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4690  coco/bbox_mAP_l: 0.7840  coco/segm_mAP: 0.7150  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7610  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8230
2023/02/08 03:07:11 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:07:11 - mmengine - INFO - Saving checkpoint at 37 epochs
2023/02/08 03:07:15 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:07:15 - mmengine - INFO - bbox_mAP_copypaste: 0.675 0.789 0.729 0.000 0.452 0.778
2023/02/08 03:07:15 - mmengine - INFO - Evaluating segm...
2023/02/08 03:07:15 - mmengine - INFO - segm_mAP_copypaste: 0.716 0.789 0.760 0.000 0.469 0.824
2023/02/08 03:07:15 - mmengine - INFO - Epoch(val) [37][13/13]  coco/bbox_mAP: 0.6750  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7290  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4520  coco/bbox_mAP_l: 0.7780  coco/segm_mAP: 0.7160  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8240
2023/02/08 03:07:24 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:07:24 - mmengine - INFO - Saving checkpoint at 38 epochs
2023/02/08 03:07:28 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:07:28 - mmengine - INFO - bbox_mAP_copypaste: 0.681 0.788 0.743 0.000 0.469 0.781
2023/02/08 03:07:28 - mmengine - INFO - Evaluating segm...
2023/02/08 03:07:28 - mmengine - INFO - segm_mAP_copypaste: 0.716 0.788 0.759 0.000 0.474 0.824
2023/02/08 03:07:28 - mmengine - INFO - Epoch(val) [38][13/13]  coco/bbox_mAP: 0.6810  coco/bbox_mAP_50: 0.7880  coco/bbox_mAP_75: 0.7430  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4690  coco/bbox_mAP_l: 0.7810  coco/segm_mAP: 0.7160  coco/segm_mAP_50: 0.7880  coco/segm_mAP_75: 0.7590  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4740  coco/segm_mAP_l: 0.8240
2023/02/08 03:07:37 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:07:37 - mmengine - INFO - Saving checkpoint at 39 epochs
2023/02/08 03:07:41 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:07:41 - mmengine - INFO - bbox_mAP_copypaste: 0.678 0.789 0.728 0.000 0.456 0.781
2023/02/08 03:07:41 - mmengine - INFO - Evaluating segm...
2023/02/08 03:07:41 - mmengine - INFO - segm_mAP_copypaste: 0.714 0.789 0.760 0.000 0.469 0.822
2023/02/08 03:07:41 - mmengine - INFO - Epoch(val) [39][13/13]  coco/bbox_mAP: 0.6780  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7280  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4560  coco/bbox_mAP_l: 0.7810  coco/segm_mAP: 0.7140  coco/segm_mAP_50: 0.7890  coco/segm_mAP_75: 0.7600  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8220
2023/02/08 03:07:51 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:07:51 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/02/08 03:07:54 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:07:54 - mmengine - INFO - bbox_mAP_copypaste: 0.691 0.804 0.743 0.000 0.505 0.782
2023/02/08 03:07:54 - mmengine - INFO - Evaluating segm...
2023/02/08 03:07:54 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.804 0.783 0.000 0.525 0.824
2023/02/08 03:07:54 - mmengine - INFO - Epoch(val) [40][13/13]  coco/bbox_mAP: 0.6910  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7430  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5050  coco/bbox_mAP_l: 0.7820  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7830  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5250  coco/segm_mAP_l: 0.8240
2023/02/08 03:08:04 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:08:04 - mmengine - INFO - Saving checkpoint at 41 epochs
2023/02/08 03:08:07 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:08:07 - mmengine - INFO - bbox_mAP_copypaste: 0.677 0.788 0.727 0.000 0.457 0.780
2023/02/08 03:08:07 - mmengine - INFO - Evaluating segm...
2023/02/08 03:08:07 - mmengine - INFO - segm_mAP_copypaste: 0.713 0.788 0.759 0.000 0.469 0.821
2023/02/08 03:08:07 - mmengine - INFO - Epoch(val) [41][13/13]  coco/bbox_mAP: 0.6770  coco/bbox_mAP_50: 0.7880  coco/bbox_mAP_75: 0.7270  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4570  coco/bbox_mAP_l: 0.7800  coco/segm_mAP: 0.7130  coco/segm_mAP_50: 0.7880  coco/segm_mAP_75: 0.7590  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4690  coco/segm_mAP_l: 0.8210
2023/02/08 03:08:17 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:08:17 - mmengine - INFO - Saving checkpoint at 42 epochs
2023/02/08 03:08:20 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:08:20 - mmengine - INFO - bbox_mAP_copypaste: 0.682 0.787 0.743 0.000 0.474 0.780
2023/02/08 03:08:20 - mmengine - INFO - Evaluating segm...
2023/02/08 03:08:20 - mmengine - INFO - segm_mAP_copypaste: 0.716 0.787 0.759 0.000 0.474 0.824
2023/02/08 03:08:20 - mmengine - INFO - Epoch(val) [42][13/13]  coco/bbox_mAP: 0.6820  coco/bbox_mAP_50: 0.7870  coco/bbox_mAP_75: 0.7430  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4740  coco/bbox_mAP_l: 0.7800  coco/segm_mAP: 0.7160  coco/segm_mAP_50: 0.7870  coco/segm_mAP_75: 0.7590  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.4740  coco/segm_mAP_l: 0.8240
2023/02/08 03:08:30 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:08:30 - mmengine - INFO - Saving checkpoint at 43 epochs
2023/02/08 03:08:34 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:08:34 - mmengine - INFO - bbox_mAP_copypaste: 0.701 0.803 0.750 0.000 0.527 0.791
2023/02/08 03:08:34 - mmengine - INFO - Evaluating segm...
2023/02/08 03:08:34 - mmengine - INFO - segm_mAP_copypaste: 0.726 0.803 0.782 0.000 0.518 0.821
2023/02/08 03:08:34 - mmengine - INFO - Epoch(val) [43][13/13]  coco/bbox_mAP: 0.7010  coco/bbox_mAP_50: 0.8030  coco/bbox_mAP_75: 0.7500  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5270  coco/bbox_mAP_l: 0.7910  coco/segm_mAP: 0.7260  coco/segm_mAP_50: 0.8030  coco/segm_mAP_75: 0.7820  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5180  coco/segm_mAP_l: 0.8210
2023/02/08 03:08:43 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:08:43 - mmengine - INFO - Saving checkpoint at 44 epochs
2023/02/08 03:08:47 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:08:47 - mmengine - INFO - bbox_mAP_copypaste: 0.694 0.803 0.751 0.000 0.527 0.781
2023/02/08 03:08:47 - mmengine - INFO - Evaluating segm...
2023/02/08 03:08:47 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.803 0.782 0.000 0.518 0.824
2023/02/08 03:08:47 - mmengine - INFO - Epoch(val) [44][13/13]  coco/bbox_mAP: 0.6940  coco/bbox_mAP_50: 0.8030  coco/bbox_mAP_75: 0.7510  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5270  coco/bbox_mAP_l: 0.7810  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8030  coco/segm_mAP_75: 0.7820  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5180  coco/segm_mAP_l: 0.8240
2023/02/08 03:08:57 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:08:57 - mmengine - INFO - Saving checkpoint at 45 epochs
2023/02/08 03:09:00 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:09:00 - mmengine - INFO - bbox_mAP_copypaste: 0.695 0.804 0.750 0.000 0.527 0.783
2023/02/08 03:09:00 - mmengine - INFO - Evaluating segm...
2023/02/08 03:09:00 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.804 0.782 0.000 0.518 0.824
2023/02/08 03:09:00 - mmengine - INFO - Epoch(val) [45][13/13]  coco/bbox_mAP: 0.6950  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7500  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5270  coco/bbox_mAP_l: 0.7830  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7820  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5180  coco/segm_mAP_l: 0.8240
2023/02/08 03:09:10 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:09:10 - mmengine - INFO - Saving checkpoint at 46 epochs
2023/02/08 03:09:13 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:09:13 - mmengine - INFO - bbox_mAP_copypaste: 0.705 0.804 0.783 0.000 0.527 0.793
2023/02/08 03:09:13 - mmengine - INFO - Evaluating segm...
2023/02/08 03:09:13 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.804 0.783 0.000 0.518 0.824
2023/02/08 03:09:13 - mmengine - INFO - Epoch(val) [46][13/13]  coco/bbox_mAP: 0.7050  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7830  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5270  coco/bbox_mAP_l: 0.7930  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7830  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5180  coco/segm_mAP_l: 0.8240
2023/02/08 03:09:23 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:09:23 - mmengine - INFO - Saving checkpoint at 47 epochs
2023/02/08 03:09:26 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:09:26 - mmengine - INFO - bbox_mAP_copypaste: 0.703 0.804 0.749 0.000 0.530 0.791
2023/02/08 03:09:26 - mmengine - INFO - Evaluating segm...
2023/02/08 03:09:26 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.804 0.782 0.000 0.510 0.824
2023/02/08 03:09:26 - mmengine - INFO - Epoch(val) [47][13/13]  coco/bbox_mAP: 0.7030  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7490  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5300  coco/bbox_mAP_l: 0.7910  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7820  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5100  coco/segm_mAP_l: 0.8240
2023/02/08 03:09:36 - mmengine - INFO - Exp name: mask-rcnn_r50_fpn_ms-poly-3x_balloon_20230208_025824
2023/02/08 03:09:36 - mmengine - INFO - Saving checkpoint at 48 epochs
2023/02/08 03:09:40 - mmengine - INFO - Evaluating bbox...
2023/02/08 03:09:40 - mmengine - INFO - bbox_mAP_copypaste: 0.695 0.804 0.749 0.000 0.522 0.782
2023/02/08 03:09:40 - mmengine - INFO - Evaluating segm...
2023/02/08 03:09:40 - mmengine - INFO - segm_mAP_copypaste: 0.729 0.804 0.782 0.000 0.510 0.824
2023/02/08 03:09:40 - mmengine - INFO - Epoch(val) [48][13/13]  coco/bbox_mAP: 0.6950  coco/bbox_mAP_50: 0.8040  coco/bbox_mAP_75: 0.7490  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5220  coco/bbox_mAP_l: 0.7820  coco/segm_mAP: 0.7290  coco/segm_mAP_50: 0.8040  coco/segm_mAP_75: 0.7820  coco/segm_mAP_s: 0.0000  coco/segm_mAP_m: 0.5100  coco/segm_mAP_l: 0.8240
