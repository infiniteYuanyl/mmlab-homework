2023/02/05 11:55:55 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.7.0 | packaged by conda-forge | (default, Nov 12 2018, 20:15:55) [GCC 7.3.0]
    CUDA available: True
    numpy_random_seed: 1717146857
    GPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-16GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.74
    GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-16)
    PyTorch: 1.8.0+cu111
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.9.0+cu111
    OpenCV: 4.7.0
    MMEngine: 0.4.0

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/02/05 11:55:55 - mmengine - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ConvNeXt',
        arch='base',
        out_indices=(3, ),
        drop_path_rate=0.5,
        gap_before_final_norm=True,
        init_cfg=[
            dict(
                type='TruncNormal',
                layer=['Conv2d', 'Linear'],
                std=0.02,
                bias=0.0),
            dict(type='Constant', layer=['LayerNorm'], val=1.0, bias=0.0)
        ]),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=1024,
        loss=dict(
            type='LabelSmoothLoss', label_smooth_val=0.1, mode='original'),
        topk=(1, )),
    train_cfg=dict(augments=[
        dict(type='Mixup', alpha=0.8),
        dict(type='CutMix', alpha=1.0)
    ]))
dataset_type = 'ImageNet'
data_preprocessor = dict(
    num_classes=5,
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
bgr_mean = [103.53, 116.28, 123.675]
bgr_std = [57.375, 57.12, 58.395]
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='RandomResizedCrop',
        scale=224,
        backend='pillow',
        interpolation='bicubic'),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(
        type='RandAugment',
        policies='timm_increasing',
        num_policies=2,
        total_level=10,
        magnitude_level=9,
        magnitude_std=0.5,
        hparams=dict(pad_val=[104, 116, 124], interpolation='bicubic')),
    dict(
        type='RandomErasing',
        erase_prob=0.25,
        mode='rand',
        min_area_ratio=0.02,
        max_area_ratio=0.3333333333333333,
        fill_color=[103.53, 116.28, 123.675],
        fill_std=[57.375, 57.12, 58.395]),
    dict(type='PackClsInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='ResizeEdge',
        scale=256,
        edge='short',
        backend='pillow',
        interpolation='bicubic'),
    dict(type='CenterCrop', crop_size=224),
    dict(type='PackClsInputs')
]
train_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='ImageNet',
        data_root='data/flower',
        ann_file='train.txt',
        data_prefix='train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='RandomResizedCrop',
                scale=224,
                backend='pillow',
                interpolation='bicubic'),
            dict(type='RandomFlip', prob=0.5, direction='horizontal'),
            dict(
                type='RandAugment',
                policies='timm_increasing',
                num_policies=2,
                total_level=10,
                magnitude_level=9,
                magnitude_std=0.5,
                hparams=dict(pad_val=[104, 116, 124],
                             interpolation='bicubic')),
            dict(
                type='RandomErasing',
                erase_prob=0.25,
                mode='rand',
                min_area_ratio=0.02,
                max_area_ratio=0.3333333333333333,
                fill_color=[103.53, 116.28, 123.675],
                fill_std=[57.375, 57.12, 58.395]),
            dict(type='PackClsInputs')
        ],
        classes=['daisy', 'dandelion', 'rose', 'sunflower', 'tulip']),
    sampler=dict(type='DefaultSampler', shuffle=True))
val_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='ImageNet',
        data_root='data/flower',
        ann_file='val.txt',
        data_prefix='val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='ResizeEdge',
                scale=256,
                edge='short',
                backend='pillow',
                interpolation='bicubic'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackClsInputs')
        ],
        classes=['daisy', 'dandelion', 'rose', 'sunflower', 'tulip']),
    sampler=dict(type='DefaultSampler', shuffle=False))
val_evaluator = dict(type='Accuracy', topk=(1, ))
test_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=64,
    num_workers=5,
    dataset=dict(
        type='ImageNet',
        data_root='data/imagenet',
        ann_file='meta/val.txt',
        data_prefix='val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='ResizeEdge',
                scale=256,
                edge='short',
                backend='pillow',
                interpolation='bicubic'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackClsInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
test_evaluator = dict(type='Accuracy', topk=(1, 5))
optim_wrapper = dict(
    optimizer=dict(
        type='AdamW',
        lr=0.001,
        weight_decay=0.05,
        eps=1e-08,
        betas=(0.9, 0.999)),
    paramwise_cfg=dict(
        norm_decay_mult=0.0,
        bias_decay_mult=0.0,
        flat_decay_mult=0.0,
        custom_keys=dict({
            '.absolute_pos_embed': dict(decay_mult=0.0),
            '.relative_position_bias_table': dict(decay_mult=0.0)
        })))
param_scheduler = [
    dict(
        type='LinearLR',
        start_factor=0.001,
        by_epoch=True,
        end=20,
        convert_to_iter_based=True),
    dict(type='CosineAnnealingLR', eta_min=1e-05, by_epoch=True, begin=20)
]
train_cfg = dict(by_epoch=True, max_epochs=1000, val_interval=1)
val_cfg = dict()
test_cfg = dict()
auto_scale_lr = dict(base_batch_size=1024)
default_scope = 'mmcls'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=20),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='VisualizationHook', enable=False))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='WandbVisBackend'), dict(type='LocalVisBackend')]
visualizer = dict(
    type='ClsVisualizer',
    vis_backends=[dict(type='WandbVisBackend'),
                  dict(type='LocalVisBackend')])
log_level = 'INFO'
load_from = None
resume = False
randomness = dict(seed=None, deterministic=False)
launcher = 'none'
work_dir = './work_dirs/convnext-base_32xb128_flower'

2023/02/05 11:55:55 - mmengine - WARNING - The "visualizer" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:55:55 - mmengine - WARNING - The "vis_backend" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:11 - mmengine - WARNING - The "model" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:11 - mmengine - WARNING - The "batch augment" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:11 - mmengine - INFO - Because batch augmentations are enabled, the data preprocessor automatically enables the `to_onehot` option to generate one-hot format labels.
2023/02/05 11:56:16 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/02/05 11:56:16 - mmengine - WARNING - The "hook" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:16 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/02/05 11:56:16 - mmengine - WARNING - The "dataset" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:16 - mmengine - WARNING - The "transform" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "data sampler" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "optimizer wrapper constructor" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.0.0.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.0.1.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.0.1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.1.0.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.1.0.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.1.1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.2.0.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.2.0.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.2.1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.3.0.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.3.0.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.downsample_layers.3.1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.0.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.1.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.0.2.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.0.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.1.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.1.2.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.0.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.1.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.2.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.3.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.4.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.5.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.6.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.7.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.8.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.9.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.10.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.11.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.12.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.13.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.14.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.15.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.16.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.17.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.18.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.19.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.20.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.21.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.22.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.23.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.24.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.25.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.2.26.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.0.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.1.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.gamma:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.depthwise_conv.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.norm.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.norm.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.pointwise_conv1.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.stages.3.2.pointwise_conv2.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.norm3.weight:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- backbone.norm3.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - INFO - paramwise_options -- head.fc.bias:weight_decay=0.0
2023/02/05 11:56:17 - mmengine - WARNING - The "optimizer" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "optimizer_wrapper" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "parameter scheduler" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "metric" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
2023/02/05 11:56:17 - mmengine - WARNING - The "weight initializer" registry in mmcls did not set import location. Fallback to call `mmcls.utils.register_all_modules` instead.
Name of parameter - Initialization information

backbone.downsample_layers.0.0.weight - torch.Size([128, 3, 4, 4]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.0.0.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.0.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.0.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.1.0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.1.0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.1.1.weight - torch.Size([256, 128, 2, 2]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.1.1.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.2.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.2.1.weight - torch.Size([512, 256, 2, 2]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.2.1.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.3.0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.3.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.downsample_layers.3.1.weight - torch.Size([1024, 512, 2, 2]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.downsample_layers.3.1.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.0.depthwise_conv.weight - torch.Size([128, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.depthwise_conv.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.0.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.0.pointwise_conv1.weight - torch.Size([512, 128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.pointwise_conv1.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.pointwise_conv2.weight - torch.Size([128, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.0.pointwise_conv2.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.1.depthwise_conv.weight - torch.Size([128, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.depthwise_conv.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.1.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.1.pointwise_conv1.weight - torch.Size([512, 128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.pointwise_conv1.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.pointwise_conv2.weight - torch.Size([128, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.1.pointwise_conv2.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.2.depthwise_conv.weight - torch.Size([128, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.depthwise_conv.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.2.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.2.pointwise_conv1.weight - torch.Size([512, 128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.pointwise_conv1.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.pointwise_conv2.weight - torch.Size([128, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.0.2.pointwise_conv2.bias - torch.Size([128]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.0.depthwise_conv.weight - torch.Size([256, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.depthwise_conv.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.0.pointwise_conv1.weight - torch.Size([1024, 256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.pointwise_conv1.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.pointwise_conv2.weight - torch.Size([256, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.0.pointwise_conv2.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.1.depthwise_conv.weight - torch.Size([256, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.depthwise_conv.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.1.pointwise_conv1.weight - torch.Size([1024, 256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.pointwise_conv1.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.pointwise_conv2.weight - torch.Size([256, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.1.pointwise_conv2.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.2.depthwise_conv.weight - torch.Size([256, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.depthwise_conv.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.2.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.2.pointwise_conv1.weight - torch.Size([1024, 256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.pointwise_conv1.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.pointwise_conv2.weight - torch.Size([256, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.1.2.pointwise_conv2.bias - torch.Size([256]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.0.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.0.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.0.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.0.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.1.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.1.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.1.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.1.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.2.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.2.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.2.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.2.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.3.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.3.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.3.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.3.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.4.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.4.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.4.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.4.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.5.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.5.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.5.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.5.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.6.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.6.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.6.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.6.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.7.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.7.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.7.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.7.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.8.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.8.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.8.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.8.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.9.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.9.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.9.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.9.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.10.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.10.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.10.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.10.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.11.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.11.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.11.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.11.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.12.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.12.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.12.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.12.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.13.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.13.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.13.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.13.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.14.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.14.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.14.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.14.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.15.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.15.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.15.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.15.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.16.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.16.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.16.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.16.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.17.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.17.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.17.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.17.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.18.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.18.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.18.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.18.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.19.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.19.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.19.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.19.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.20.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.20.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.20.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.20.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.21.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.21.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.21.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.21.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.22.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.22.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.22.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.22.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.23.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.23.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.23.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.23.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.24.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.24.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.24.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.24.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.25.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.25.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.25.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.25.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.26.depthwise_conv.weight - torch.Size([512, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.depthwise_conv.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.26.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.26.pointwise_conv1.weight - torch.Size([2048, 512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.pointwise_conv1.bias - torch.Size([2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.pointwise_conv2.weight - torch.Size([512, 2048]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.2.26.pointwise_conv2.bias - torch.Size([512]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.0.depthwise_conv.weight - torch.Size([1024, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.depthwise_conv.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.0.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.0.pointwise_conv1.weight - torch.Size([4096, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.pointwise_conv1.bias - torch.Size([4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.pointwise_conv2.weight - torch.Size([1024, 4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.0.pointwise_conv2.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.1.depthwise_conv.weight - torch.Size([1024, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.depthwise_conv.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.1.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.1.pointwise_conv1.weight - torch.Size([4096, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.pointwise_conv1.bias - torch.Size([4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.pointwise_conv2.weight - torch.Size([1024, 4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.1.pointwise_conv2.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.2.depthwise_conv.weight - torch.Size([1024, 1, 7, 7]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.depthwise_conv.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.2.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.3.2.pointwise_conv1.weight - torch.Size([4096, 1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.pointwise_conv1.bias - torch.Size([4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.pointwise_conv2.weight - torch.Size([1024, 4096]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.stages.3.2.pointwise_conv2.bias - torch.Size([1024]): 
TruncNormalInit: a=-2, b=2, mean=0, std=0.02, bias=0.0 

backbone.norm3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.norm3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([5, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/02/05 11:56:17 - mmengine - INFO - Checkpoints will be saved to /home/haida_niejie/work/yyl/mmclassification-1.0.0rc5/work_dirs/convnext-base_32xb128_flower.
2023/02/05 11:56:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:56:52 - mmengine - INFO - Epoch(val) [1][18/18]  accuracy/top1: 31.2937
2023/02/05 11:57:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:57:26 - mmengine - INFO - Epoch(val) [2][18/18]  accuracy/top1: 33.9161
2023/02/05 11:57:56 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:57:59 - mmengine - INFO - Epoch(val) [3][18/18]  accuracy/top1: 33.3916
2023/02/05 11:58:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:58:32 - mmengine - INFO - Epoch(val) [4][18/18]  accuracy/top1: 40.5594
2023/02/05 11:59:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:59:05 - mmengine - INFO - Epoch(val) [5][18/18]  accuracy/top1: 39.3357
2023/02/05 11:59:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 11:59:38 - mmengine - INFO - Epoch(val) [6][18/18]  accuracy/top1: 39.5105
2023/02/05 12:00:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:00:12 - mmengine - INFO - Epoch(val) [7][18/18]  accuracy/top1: 45.2797
2023/02/05 12:00:42 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:00:45 - mmengine - INFO - Epoch(val) [8][18/18]  accuracy/top1: 39.3357
2023/02/05 12:01:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:01:18 - mmengine - INFO - Epoch(val) [9][18/18]  accuracy/top1: 49.1259
2023/02/05 12:01:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:01:52 - mmengine - INFO - Epoch(val) [10][18/18]  accuracy/top1: 50.8741
2023/02/05 12:02:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:02:25 - mmengine - INFO - Epoch(val) [11][18/18]  accuracy/top1: 46.3287
2023/02/05 12:02:56 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:02:58 - mmengine - INFO - Epoch(val) [12][18/18]  accuracy/top1: 43.1818
2023/02/05 12:03:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:03:32 - mmengine - INFO - Epoch(val) [13][18/18]  accuracy/top1: 50.8741
2023/02/05 12:03:59 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:04:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:04:05 - mmengine - INFO - Epoch(val) [14][18/18]  accuracy/top1: 48.4266
2023/02/05 12:04:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:04:38 - mmengine - INFO - Epoch(val) [15][18/18]  accuracy/top1: 52.2727
2023/02/05 12:05:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:05:11 - mmengine - INFO - Epoch(val) [16][18/18]  accuracy/top1: 50.3497
2023/02/05 12:05:42 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:05:45 - mmengine - INFO - Epoch(val) [17][18/18]  accuracy/top1: 46.1538
2023/02/05 12:06:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:06:18 - mmengine - INFO - Epoch(val) [18][18/18]  accuracy/top1: 49.6503
2023/02/05 12:06:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:06:51 - mmengine - INFO - Epoch(val) [19][18/18]  accuracy/top1: 47.5524
2023/02/05 12:07:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:07:22 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/02/05 12:07:29 - mmengine - INFO - Epoch(val) [20][18/18]  accuracy/top1: 47.9021
2023/02/05 12:08:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:08:03 - mmengine - INFO - Epoch(val) [21][18/18]  accuracy/top1: 50.6993
2023/02/05 12:08:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:08:36 - mmengine - INFO - Epoch(val) [22][18/18]  accuracy/top1: 50.5245
2023/02/05 12:09:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:09:09 - mmengine - INFO - Epoch(val) [23][18/18]  accuracy/top1: 54.3706
2023/02/05 12:09:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:09:42 - mmengine - INFO - Epoch(val) [24][18/18]  accuracy/top1: 53.3217
2023/02/05 12:10:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:10:16 - mmengine - INFO - Epoch(val) [25][18/18]  accuracy/top1: 52.0979
2023/02/05 12:10:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:10:49 - mmengine - INFO - Epoch(val) [26][18/18]  accuracy/top1: 54.1958
2023/02/05 12:11:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:11:22 - mmengine - INFO - Epoch(val) [27][18/18]  accuracy/top1: 55.7692
2023/02/05 12:11:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:11:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:11:56 - mmengine - INFO - Epoch(val) [28][18/18]  accuracy/top1: 57.5175
2023/02/05 12:12:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:12:29 - mmengine - INFO - Epoch(val) [29][18/18]  accuracy/top1: 51.3986
2023/02/05 12:13:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:13:02 - mmengine - INFO - Epoch(val) [30][18/18]  accuracy/top1: 56.8182
2023/02/05 12:13:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:13:36 - mmengine - INFO - Epoch(val) [31][18/18]  accuracy/top1: 54.5455
2023/02/05 12:14:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:14:09 - mmengine - INFO - Epoch(val) [32][18/18]  accuracy/top1: 52.0979
2023/02/05 12:14:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:14:42 - mmengine - INFO - Epoch(val) [33][18/18]  accuracy/top1: 53.8462
2023/02/05 12:15:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:15:16 - mmengine - INFO - Epoch(val) [34][18/18]  accuracy/top1: 58.2168
2023/02/05 12:15:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:15:49 - mmengine - INFO - Epoch(val) [35][18/18]  accuracy/top1: 55.0699
2023/02/05 12:16:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:16:22 - mmengine - INFO - Epoch(val) [36][18/18]  accuracy/top1: 54.5455
2023/02/05 12:16:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:16:56 - mmengine - INFO - Epoch(val) [37][18/18]  accuracy/top1: 55.0699
2023/02/05 12:17:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:17:29 - mmengine - INFO - Epoch(val) [38][18/18]  accuracy/top1: 58.7413
2023/02/05 12:18:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:18:02 - mmengine - INFO - Epoch(val) [39][18/18]  accuracy/top1: 53.4965
2023/02/05 12:18:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:18:33 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/02/05 12:18:40 - mmengine - INFO - Epoch(val) [40][18/18]  accuracy/top1: 55.9441
2023/02/05 12:19:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:19:13 - mmengine - INFO - Epoch(val) [41][18/18]  accuracy/top1: 57.1678
2023/02/05 12:19:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:19:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:19:47 - mmengine - INFO - Epoch(val) [42][18/18]  accuracy/top1: 55.0699
2023/02/05 12:20:18 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:20:20 - mmengine - INFO - Epoch(val) [43][18/18]  accuracy/top1: 61.1888
2023/02/05 12:20:51 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:20:53 - mmengine - INFO - Epoch(val) [44][18/18]  accuracy/top1: 63.9860
2023/02/05 12:21:24 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:21:27 - mmengine - INFO - Epoch(val) [45][18/18]  accuracy/top1: 58.3916
2023/02/05 12:21:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:22:00 - mmengine - INFO - Epoch(val) [46][18/18]  accuracy/top1: 61.0140
2023/02/05 12:22:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:22:33 - mmengine - INFO - Epoch(val) [47][18/18]  accuracy/top1: 59.2657
2023/02/05 12:23:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:23:07 - mmengine - INFO - Epoch(val) [48][18/18]  accuracy/top1: 61.3636
2023/02/05 12:23:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:23:40 - mmengine - INFO - Epoch(val) [49][18/18]  accuracy/top1: 61.1888
2023/02/05 12:24:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:24:13 - mmengine - INFO - Epoch(val) [50][18/18]  accuracy/top1: 61.5385
2023/02/05 12:24:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:24:46 - mmengine - INFO - Epoch(val) [51][18/18]  accuracy/top1: 56.2937
2023/02/05 12:25:18 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:25:20 - mmengine - INFO - Epoch(val) [52][18/18]  accuracy/top1: 61.0140
2023/02/05 12:25:51 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:25:53 - mmengine - INFO - Epoch(val) [53][18/18]  accuracy/top1: 64.6853
2023/02/05 12:26:24 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:26:27 - mmengine - INFO - Epoch(val) [54][18/18]  accuracy/top1: 57.8671
2023/02/05 12:26:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:27:00 - mmengine - INFO - Epoch(val) [55][18/18]  accuracy/top1: 69.9301
2023/02/05 12:27:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:27:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:27:33 - mmengine - INFO - Epoch(val) [56][18/18]  accuracy/top1: 63.9860
2023/02/05 12:28:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:28:06 - mmengine - INFO - Epoch(val) [57][18/18]  accuracy/top1: 64.1608
2023/02/05 12:28:37 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:28:40 - mmengine - INFO - Epoch(val) [58][18/18]  accuracy/top1: 63.1119
2023/02/05 12:29:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:29:13 - mmengine - INFO - Epoch(val) [59][18/18]  accuracy/top1: 68.7063
2023/02/05 12:29:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:29:44 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/02/05 12:29:51 - mmengine - INFO - Epoch(val) [60][18/18]  accuracy/top1: 62.4126
2023/02/05 12:30:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:30:24 - mmengine - INFO - Epoch(val) [61][18/18]  accuracy/top1: 70.1049
2023/02/05 12:30:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:30:57 - mmengine - INFO - Epoch(val) [62][18/18]  accuracy/top1: 67.6573
2023/02/05 12:31:28 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:31:31 - mmengine - INFO - Epoch(val) [63][18/18]  accuracy/top1: 71.5035
2023/02/05 12:32:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:32:04 - mmengine - INFO - Epoch(val) [64][18/18]  accuracy/top1: 59.2657
2023/02/05 12:32:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:32:37 - mmengine - INFO - Epoch(val) [65][18/18]  accuracy/top1: 64.6853
2023/02/05 12:33:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:33:11 - mmengine - INFO - Epoch(val) [66][18/18]  accuracy/top1: 69.9301
2023/02/05 12:33:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:33:44 - mmengine - INFO - Epoch(val) [67][18/18]  accuracy/top1: 69.9301
2023/02/05 12:34:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:34:17 - mmengine - INFO - Epoch(val) [68][18/18]  accuracy/top1: 68.0070
2023/02/05 12:34:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:34:50 - mmengine - INFO - Epoch(val) [69][18/18]  accuracy/top1: 69.0559
2023/02/05 12:35:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:35:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:35:24 - mmengine - INFO - Epoch(val) [70][18/18]  accuracy/top1: 71.1538
2023/02/05 12:35:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:35:57 - mmengine - INFO - Epoch(val) [71][18/18]  accuracy/top1: 72.0280
2023/02/05 12:36:28 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:36:30 - mmengine - INFO - Epoch(val) [72][18/18]  accuracy/top1: 68.7063
2023/02/05 12:37:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:37:04 - mmengine - INFO - Epoch(val) [73][18/18]  accuracy/top1: 75.8741
2023/02/05 12:37:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:37:37 - mmengine - INFO - Epoch(val) [74][18/18]  accuracy/top1: 75.5245
2023/02/05 12:38:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:38:10 - mmengine - INFO - Epoch(val) [75][18/18]  accuracy/top1: 72.5525
2023/02/05 12:38:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:38:44 - mmengine - INFO - Epoch(val) [76][18/18]  accuracy/top1: 73.4266
2023/02/05 12:39:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:39:17 - mmengine - INFO - Epoch(val) [77][18/18]  accuracy/top1: 76.0490
2023/02/05 12:39:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:39:50 - mmengine - INFO - Epoch(val) [78][18/18]  accuracy/top1: 76.2238
2023/02/05 12:40:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:40:23 - mmengine - INFO - Epoch(val) [79][18/18]  accuracy/top1: 75.3496
2023/02/05 12:40:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:40:54 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/02/05 12:41:01 - mmengine - INFO - Epoch(val) [80][18/18]  accuracy/top1: 73.6014
2023/02/05 12:41:32 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:41:35 - mmengine - INFO - Epoch(val) [81][18/18]  accuracy/top1: 74.1259
2023/02/05 12:42:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:42:08 - mmengine - INFO - Epoch(val) [82][18/18]  accuracy/top1: 78.8462
2023/02/05 12:42:39 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:42:42 - mmengine - INFO - Epoch(val) [83][18/18]  accuracy/top1: 73.4266
2023/02/05 12:42:52 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:43:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:43:15 - mmengine - INFO - Epoch(val) [84][18/18]  accuracy/top1: 73.9510
2023/02/05 12:43:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:43:49 - mmengine - INFO - Epoch(val) [85][18/18]  accuracy/top1: 77.0979
2023/02/05 12:44:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:44:22 - mmengine - INFO - Epoch(val) [86][18/18]  accuracy/top1: 76.3986
2023/02/05 12:44:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:44:56 - mmengine - INFO - Epoch(val) [87][18/18]  accuracy/top1: 73.4266
2023/02/05 12:45:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:45:30 - mmengine - INFO - Epoch(val) [88][18/18]  accuracy/top1: 76.7483
2023/02/05 12:46:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:46:03 - mmengine - INFO - Epoch(val) [89][18/18]  accuracy/top1: 79.8951
2023/02/05 12:46:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:46:37 - mmengine - INFO - Epoch(val) [90][18/18]  accuracy/top1: 77.2727
2023/02/05 12:47:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:47:10 - mmengine - INFO - Epoch(val) [91][18/18]  accuracy/top1: 77.9720
2023/02/05 12:47:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:47:44 - mmengine - INFO - Epoch(val) [92][18/18]  accuracy/top1: 74.4755
2023/02/05 12:48:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:48:17 - mmengine - INFO - Epoch(val) [93][18/18]  accuracy/top1: 78.4965
2023/02/05 12:48:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:48:50 - mmengine - INFO - Epoch(val) [94][18/18]  accuracy/top1: 78.3217
2023/02/05 12:49:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:49:24 - mmengine - INFO - Epoch(val) [95][18/18]  accuracy/top1: 78.3217
2023/02/05 12:49:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:49:57 - mmengine - INFO - Epoch(val) [96][18/18]  accuracy/top1: 80.0699
2023/02/05 12:50:28 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:50:31 - mmengine - INFO - Epoch(val) [97][18/18]  accuracy/top1: 76.9231
2023/02/05 12:50:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:51:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:51:04 - mmengine - INFO - Epoch(val) [98][18/18]  accuracy/top1: 79.5455
2023/02/05 12:51:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:51:38 - mmengine - INFO - Epoch(val) [99][18/18]  accuracy/top1: 78.1469
2023/02/05 12:52:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:52:09 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/02/05 12:52:16 - mmengine - INFO - Epoch(val) [100][18/18]  accuracy/top1: 77.6224
2023/02/05 12:52:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:52:49 - mmengine - INFO - Epoch(val) [101][18/18]  accuracy/top1: 74.3007
2023/02/05 12:53:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:53:23 - mmengine - INFO - Epoch(val) [102][18/18]  accuracy/top1: 80.5944
2023/02/05 12:53:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:53:56 - mmengine - INFO - Epoch(val) [103][18/18]  accuracy/top1: 81.1189
2023/02/05 12:54:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:54:29 - mmengine - INFO - Epoch(val) [104][18/18]  accuracy/top1: 78.8462
2023/02/05 12:55:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:55:03 - mmengine - INFO - Epoch(val) [105][18/18]  accuracy/top1: 77.2727
2023/02/05 12:55:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:55:36 - mmengine - INFO - Epoch(val) [106][18/18]  accuracy/top1: 80.0699
2023/02/05 12:56:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:56:10 - mmengine - INFO - Epoch(val) [107][18/18]  accuracy/top1: 79.5455
2023/02/05 12:56:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:56:43 - mmengine - INFO - Epoch(val) [108][18/18]  accuracy/top1: 81.4685
2023/02/05 12:57:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:57:16 - mmengine - INFO - Epoch(val) [109][18/18]  accuracy/top1: 79.7203
2023/02/05 12:57:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:57:50 - mmengine - INFO - Epoch(val) [110][18/18]  accuracy/top1: 81.4685
2023/02/05 12:58:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:58:23 - mmengine - INFO - Epoch(val) [111][18/18]  accuracy/top1: 81.4685
2023/02/05 12:58:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:58:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:58:56 - mmengine - INFO - Epoch(val) [112][18/18]  accuracy/top1: 81.6434
2023/02/05 12:59:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 12:59:30 - mmengine - INFO - Epoch(val) [113][18/18]  accuracy/top1: 76.5734
2023/02/05 13:00:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:00:03 - mmengine - INFO - Epoch(val) [114][18/18]  accuracy/top1: 81.6434
2023/02/05 13:00:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:00:37 - mmengine - INFO - Epoch(val) [115][18/18]  accuracy/top1: 79.5455
2023/02/05 13:01:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:01:10 - mmengine - INFO - Epoch(val) [116][18/18]  accuracy/top1: 80.4196
2023/02/05 13:01:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:01:44 - mmengine - INFO - Epoch(val) [117][18/18]  accuracy/top1: 77.4476
2023/02/05 13:02:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:02:17 - mmengine - INFO - Epoch(val) [118][18/18]  accuracy/top1: 79.5455
2023/02/05 13:02:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:02:51 - mmengine - INFO - Epoch(val) [119][18/18]  accuracy/top1: 80.4196
2023/02/05 13:03:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:03:22 - mmengine - INFO - Saving checkpoint at 120 epochs
2023/02/05 13:03:29 - mmengine - INFO - Epoch(val) [120][18/18]  accuracy/top1: 81.6434
2023/02/05 13:04:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:04:02 - mmengine - INFO - Epoch(val) [121][18/18]  accuracy/top1: 80.4196
2023/02/05 13:04:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:04:37 - mmengine - INFO - Epoch(val) [122][18/18]  accuracy/top1: 80.9441
2023/02/05 13:05:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:05:11 - mmengine - INFO - Epoch(val) [123][18/18]  accuracy/top1: 81.2937
2023/02/05 13:05:42 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:05:44 - mmengine - INFO - Epoch(val) [124][18/18]  accuracy/top1: 79.8951
2023/02/05 13:06:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:06:18 - mmengine - INFO - Epoch(val) [125][18/18]  accuracy/top1: 82.1678
2023/02/05 13:06:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:06:52 - mmengine - INFO - Epoch(val) [126][18/18]  accuracy/top1: 82.3427
2023/02/05 13:07:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:07:25 - mmengine - INFO - Epoch(val) [127][18/18]  accuracy/top1: 82.3427
2023/02/05 13:07:56 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:07:59 - mmengine - INFO - Epoch(val) [128][18/18]  accuracy/top1: 81.9930
2023/02/05 13:08:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:08:33 - mmengine - INFO - Epoch(val) [129][18/18]  accuracy/top1: 80.4196
2023/02/05 13:09:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:09:07 - mmengine - INFO - Epoch(val) [130][18/18]  accuracy/top1: 81.8182
2023/02/05 13:09:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:09:40 - mmengine - INFO - Epoch(val) [131][18/18]  accuracy/top1: 83.5664
2023/02/05 13:10:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:10:14 - mmengine - INFO - Epoch(val) [132][18/18]  accuracy/top1: 82.3427
2023/02/05 13:10:45 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:10:47 - mmengine - INFO - Epoch(val) [133][18/18]  accuracy/top1: 80.2448
2023/02/05 13:11:18 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:11:21 - mmengine - INFO - Epoch(val) [134][18/18]  accuracy/top1: 84.0909
2023/02/05 13:11:52 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:11:55 - mmengine - INFO - Epoch(val) [135][18/18]  accuracy/top1: 82.6923
2023/02/05 13:12:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:12:30 - mmengine - INFO - Epoch(val) [136][18/18]  accuracy/top1: 81.2937
2023/02/05 13:13:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:13:03 - mmengine - INFO - Epoch(val) [137][18/18]  accuracy/top1: 78.8462
2023/02/05 13:13:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:13:37 - mmengine - INFO - Epoch(val) [138][18/18]  accuracy/top1: 80.0699
2023/02/05 13:14:05 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:14:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:14:10 - mmengine - INFO - Epoch(val) [139][18/18]  accuracy/top1: 83.2168
2023/02/05 13:14:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:14:41 - mmengine - INFO - Saving checkpoint at 140 epochs
2023/02/05 13:14:48 - mmengine - INFO - Epoch(val) [140][18/18]  accuracy/top1: 83.0420
2023/02/05 13:15:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:15:22 - mmengine - INFO - Epoch(val) [141][18/18]  accuracy/top1: 83.7413
2023/02/05 13:15:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:15:55 - mmengine - INFO - Epoch(val) [142][18/18]  accuracy/top1: 84.9650
2023/02/05 13:16:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:16:29 - mmengine - INFO - Epoch(val) [143][18/18]  accuracy/top1: 84.4406
2023/02/05 13:17:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:17:02 - mmengine - INFO - Epoch(val) [144][18/18]  accuracy/top1: 82.8671
2023/02/05 13:17:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:17:35 - mmengine - INFO - Epoch(val) [145][18/18]  accuracy/top1: 80.9441
2023/02/05 13:18:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:18:09 - mmengine - INFO - Epoch(val) [146][18/18]  accuracy/top1: 84.2657
2023/02/05 13:18:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:18:42 - mmengine - INFO - Epoch(val) [147][18/18]  accuracy/top1: 82.3427
2023/02/05 13:19:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:19:16 - mmengine - INFO - Epoch(val) [148][18/18]  accuracy/top1: 83.3916
2023/02/05 13:19:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:19:49 - mmengine - INFO - Epoch(val) [149][18/18]  accuracy/top1: 83.3916
2023/02/05 13:20:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:20:23 - mmengine - INFO - Epoch(val) [150][18/18]  accuracy/top1: 82.8671
2023/02/05 13:20:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:20:56 - mmengine - INFO - Epoch(val) [151][18/18]  accuracy/top1: 84.9650
2023/02/05 13:21:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:21:29 - mmengine - INFO - Epoch(val) [152][18/18]  accuracy/top1: 84.4406
2023/02/05 13:21:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:22:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:22:03 - mmengine - INFO - Epoch(val) [153][18/18]  accuracy/top1: 83.9161
2023/02/05 13:22:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:22:36 - mmengine - INFO - Epoch(val) [154][18/18]  accuracy/top1: 86.7133
2023/02/05 13:23:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:23:11 - mmengine - INFO - Epoch(val) [155][18/18]  accuracy/top1: 86.0140
2023/02/05 13:23:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:23:43 - mmengine - INFO - Epoch(val) [156][18/18]  accuracy/top1: 83.5664
2023/02/05 13:24:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:24:15 - mmengine - INFO - Epoch(val) [157][18/18]  accuracy/top1: 85.3147
2023/02/05 13:24:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:24:47 - mmengine - INFO - Epoch(val) [158][18/18]  accuracy/top1: 80.9441
2023/02/05 13:25:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:25:19 - mmengine - INFO - Epoch(val) [159][18/18]  accuracy/top1: 84.2657
2023/02/05 13:25:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:25:49 - mmengine - INFO - Saving checkpoint at 160 epochs
2023/02/05 13:25:56 - mmengine - INFO - Epoch(val) [160][18/18]  accuracy/top1: 81.9930
2023/02/05 13:26:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:26:29 - mmengine - INFO - Epoch(val) [161][18/18]  accuracy/top1: 83.9161
2023/02/05 13:27:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:27:03 - mmengine - INFO - Epoch(val) [162][18/18]  accuracy/top1: 83.2168
2023/02/05 13:27:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:27:36 - mmengine - INFO - Epoch(val) [163][18/18]  accuracy/top1: 85.1399
2023/02/05 13:28:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:28:10 - mmengine - INFO - Epoch(val) [164][18/18]  accuracy/top1: 84.6154
2023/02/05 13:28:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:28:44 - mmengine - INFO - Epoch(val) [165][18/18]  accuracy/top1: 85.4895
2023/02/05 13:29:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:29:17 - mmengine - INFO - Epoch(val) [166][18/18]  accuracy/top1: 85.6643
2023/02/05 13:29:39 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:29:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:29:51 - mmengine - INFO - Epoch(val) [167][18/18]  accuracy/top1: 84.2657
2023/02/05 13:30:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:30:26 - mmengine - INFO - Epoch(val) [168][18/18]  accuracy/top1: 84.4406
2023/02/05 13:30:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:31:00 - mmengine - INFO - Epoch(val) [169][18/18]  accuracy/top1: 83.5664
2023/02/05 13:31:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:31:34 - mmengine - INFO - Epoch(val) [170][18/18]  accuracy/top1: 88.4615
2023/02/05 13:32:05 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:32:08 - mmengine - INFO - Epoch(val) [171][18/18]  accuracy/top1: 86.7133
2023/02/05 13:32:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:32:41 - mmengine - INFO - Epoch(val) [172][18/18]  accuracy/top1: 86.1888
2023/02/05 13:33:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:33:15 - mmengine - INFO - Epoch(val) [173][18/18]  accuracy/top1: 84.0909
2023/02/05 13:33:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:33:49 - mmengine - INFO - Epoch(val) [174][18/18]  accuracy/top1: 85.8392
2023/02/05 13:34:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:34:22 - mmengine - INFO - Epoch(val) [175][18/18]  accuracy/top1: 86.0140
2023/02/05 13:34:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:34:56 - mmengine - INFO - Epoch(val) [176][18/18]  accuracy/top1: 86.8881
2023/02/05 13:35:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:35:30 - mmengine - INFO - Epoch(val) [177][18/18]  accuracy/top1: 87.4126
2023/02/05 13:36:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:36:03 - mmengine - INFO - Epoch(val) [178][18/18]  accuracy/top1: 85.1399
2023/02/05 13:36:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:36:38 - mmengine - INFO - Epoch(val) [179][18/18]  accuracy/top1: 83.7413
2023/02/05 13:37:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:37:09 - mmengine - INFO - Saving checkpoint at 180 epochs
2023/02/05 13:37:16 - mmengine - INFO - Epoch(val) [180][18/18]  accuracy/top1: 84.7902
2023/02/05 13:37:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:37:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:37:49 - mmengine - INFO - Epoch(val) [181][18/18]  accuracy/top1: 86.8881
2023/02/05 13:38:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:38:23 - mmengine - INFO - Epoch(val) [182][18/18]  accuracy/top1: 84.6154
2023/02/05 13:38:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:38:56 - mmengine - INFO - Epoch(val) [183][18/18]  accuracy/top1: 86.7133
2023/02/05 13:39:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:39:30 - mmengine - INFO - Epoch(val) [184][18/18]  accuracy/top1: 85.8392
2023/02/05 13:40:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:40:03 - mmengine - INFO - Epoch(val) [185][18/18]  accuracy/top1: 86.3636
2023/02/05 13:40:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:40:37 - mmengine - INFO - Epoch(val) [186][18/18]  accuracy/top1: 85.3147
2023/02/05 13:41:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:41:11 - mmengine - INFO - Epoch(val) [187][18/18]  accuracy/top1: 88.6364
2023/02/05 13:41:42 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:41:44 - mmengine - INFO - Epoch(val) [188][18/18]  accuracy/top1: 86.0140
2023/02/05 13:42:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:42:18 - mmengine - INFO - Epoch(val) [189][18/18]  accuracy/top1: 86.7133
2023/02/05 13:42:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:42:52 - mmengine - INFO - Epoch(val) [190][18/18]  accuracy/top1: 84.6154
2023/02/05 13:43:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:43:25 - mmengine - INFO - Epoch(val) [191][18/18]  accuracy/top1: 85.8392
2023/02/05 13:43:56 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:43:59 - mmengine - INFO - Epoch(val) [192][18/18]  accuracy/top1: 86.7133
2023/02/05 13:44:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:44:32 - mmengine - INFO - Epoch(val) [193][18/18]  accuracy/top1: 85.1399
2023/02/05 13:45:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:45:06 - mmengine - INFO - Epoch(val) [194][18/18]  accuracy/top1: 86.0140
2023/02/05 13:45:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:45:37 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:45:39 - mmengine - INFO - Epoch(val) [195][18/18]  accuracy/top1: 86.5385
2023/02/05 13:46:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:46:13 - mmengine - INFO - Epoch(val) [196][18/18]  accuracy/top1: 88.6364
2023/02/05 13:46:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:46:47 - mmengine - INFO - Epoch(val) [197][18/18]  accuracy/top1: 87.0629
2023/02/05 13:47:18 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:47:20 - mmengine - INFO - Epoch(val) [198][18/18]  accuracy/top1: 85.1399
2023/02/05 13:47:51 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:47:54 - mmengine - INFO - Epoch(val) [199][18/18]  accuracy/top1: 86.5385
2023/02/05 13:48:25 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:48:25 - mmengine - INFO - Saving checkpoint at 200 epochs
2023/02/05 13:48:31 - mmengine - INFO - Epoch(val) [200][18/18]  accuracy/top1: 85.3147
2023/02/05 13:49:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:49:05 - mmengine - INFO - Epoch(val) [201][18/18]  accuracy/top1: 84.4406
2023/02/05 13:49:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:49:38 - mmengine - INFO - Epoch(val) [202][18/18]  accuracy/top1: 88.1119
2023/02/05 13:50:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:50:12 - mmengine - INFO - Epoch(val) [203][18/18]  accuracy/top1: 87.5874
2023/02/05 13:50:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:50:45 - mmengine - INFO - Epoch(val) [204][18/18]  accuracy/top1: 85.1399
2023/02/05 13:51:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:51:20 - mmengine - INFO - Epoch(val) [205][18/18]  accuracy/top1: 87.0629
2023/02/05 13:51:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:51:53 - mmengine - INFO - Epoch(val) [206][18/18]  accuracy/top1: 87.5874
2023/02/05 13:52:24 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:52:27 - mmengine - INFO - Epoch(val) [207][18/18]  accuracy/top1: 86.0140
2023/02/05 13:52:58 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:53:00 - mmengine - INFO - Epoch(val) [208][18/18]  accuracy/top1: 86.0140
2023/02/05 13:53:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:53:32 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:53:34 - mmengine - INFO - Epoch(val) [209][18/18]  accuracy/top1: 85.4895
2023/02/05 13:54:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:54:09 - mmengine - INFO - Epoch(val) [210][18/18]  accuracy/top1: 88.1119
2023/02/05 13:54:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:54:43 - mmengine - INFO - Epoch(val) [211][18/18]  accuracy/top1: 85.8392
2023/02/05 13:55:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:55:17 - mmengine - INFO - Epoch(val) [212][18/18]  accuracy/top1: 88.2867
2023/02/05 13:55:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:55:50 - mmengine - INFO - Epoch(val) [213][18/18]  accuracy/top1: 86.7133
2023/02/05 13:56:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:56:25 - mmengine - INFO - Epoch(val) [214][18/18]  accuracy/top1: 84.7902
2023/02/05 13:56:56 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:56:58 - mmengine - INFO - Epoch(val) [215][18/18]  accuracy/top1: 86.1888
2023/02/05 13:57:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:57:32 - mmengine - INFO - Epoch(val) [216][18/18]  accuracy/top1: 85.6643
2023/02/05 13:58:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:58:05 - mmengine - INFO - Epoch(val) [217][18/18]  accuracy/top1: 87.9371
2023/02/05 13:58:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:58:39 - mmengine - INFO - Epoch(val) [218][18/18]  accuracy/top1: 86.1888
2023/02/05 13:59:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:59:13 - mmengine - INFO - Epoch(val) [219][18/18]  accuracy/top1: 86.8881
2023/02/05 13:59:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 13:59:43 - mmengine - INFO - Saving checkpoint at 220 epochs
2023/02/05 13:59:51 - mmengine - INFO - Epoch(val) [220][18/18]  accuracy/top1: 85.4895
2023/02/05 14:00:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:00:25 - mmengine - INFO - Epoch(val) [221][18/18]  accuracy/top1: 89.1608
2023/02/05 14:00:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:00:59 - mmengine - INFO - Epoch(val) [222][18/18]  accuracy/top1: 88.4615
2023/02/05 14:01:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:01:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:01:33 - mmengine - INFO - Epoch(val) [223][18/18]  accuracy/top1: 87.2378
2023/02/05 14:02:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:02:06 - mmengine - INFO - Epoch(val) [224][18/18]  accuracy/top1: 86.7133
2023/02/05 14:02:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:02:40 - mmengine - INFO - Epoch(val) [225][18/18]  accuracy/top1: 85.8392
2023/02/05 14:03:11 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:03:14 - mmengine - INFO - Epoch(val) [226][18/18]  accuracy/top1: 87.4126
2023/02/05 14:03:45 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:03:48 - mmengine - INFO - Epoch(val) [227][18/18]  accuracy/top1: 87.9371
2023/02/05 14:04:18 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:04:21 - mmengine - INFO - Epoch(val) [228][18/18]  accuracy/top1: 86.7133
2023/02/05 14:04:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:04:55 - mmengine - INFO - Epoch(val) [229][18/18]  accuracy/top1: 87.7622
2023/02/05 14:05:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:05:29 - mmengine - INFO - Epoch(val) [230][18/18]  accuracy/top1: 87.7622
2023/02/05 14:06:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:06:02 - mmengine - INFO - Epoch(val) [231][18/18]  accuracy/top1: 89.1608
2023/02/05 14:06:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:06:36 - mmengine - INFO - Epoch(val) [232][18/18]  accuracy/top1: 87.4126
2023/02/05 14:07:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:07:09 - mmengine - INFO - Epoch(val) [233][18/18]  accuracy/top1: 85.6643
2023/02/05 14:07:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:07:43 - mmengine - INFO - Epoch(val) [234][18/18]  accuracy/top1: 88.4615
2023/02/05 14:08:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:08:16 - mmengine - INFO - Epoch(val) [235][18/18]  accuracy/top1: 87.4126
2023/02/05 14:08:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:08:50 - mmengine - INFO - Epoch(val) [236][18/18]  accuracy/top1: 87.0629
2023/02/05 14:08:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:09:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:09:23 - mmengine - INFO - Epoch(val) [237][18/18]  accuracy/top1: 88.2867
2023/02/05 14:09:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:09:56 - mmengine - INFO - Epoch(val) [238][18/18]  accuracy/top1: 88.2867
2023/02/05 14:10:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:10:30 - mmengine - INFO - Epoch(val) [239][18/18]  accuracy/top1: 88.8112
2023/02/05 14:11:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:11:01 - mmengine - INFO - Saving checkpoint at 240 epochs
2023/02/05 14:11:09 - mmengine - INFO - Epoch(val) [240][18/18]  accuracy/top1: 85.4895
2023/02/05 14:11:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:11:42 - mmengine - INFO - Epoch(val) [241][18/18]  accuracy/top1: 87.0629
2023/02/05 14:12:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:12:16 - mmengine - INFO - Epoch(val) [242][18/18]  accuracy/top1: 88.4615
2023/02/05 14:12:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:12:49 - mmengine - INFO - Epoch(val) [243][18/18]  accuracy/top1: 88.9860
2023/02/05 14:13:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:13:23 - mmengine - INFO - Epoch(val) [244][18/18]  accuracy/top1: 89.3357
2023/02/05 14:13:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:13:56 - mmengine - INFO - Epoch(val) [245][18/18]  accuracy/top1: 87.2378
2023/02/05 14:14:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:14:30 - mmengine - INFO - Epoch(val) [246][18/18]  accuracy/top1: 88.9860
2023/02/05 14:15:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:15:04 - mmengine - INFO - Epoch(val) [247][18/18]  accuracy/top1: 86.8881
2023/02/05 14:15:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:15:37 - mmengine - INFO - Epoch(val) [248][18/18]  accuracy/top1: 87.7622
2023/02/05 14:16:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:16:11 - mmengine - INFO - Epoch(val) [249][18/18]  accuracy/top1: 86.0140
2023/02/05 14:16:42 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:16:45 - mmengine - INFO - Epoch(val) [250][18/18]  accuracy/top1: 88.4615
2023/02/05 14:17:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:17:19 - mmengine - INFO - Epoch(val) [251][18/18]  accuracy/top1: 87.9371
2023/02/05 14:17:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:17:52 - mmengine - INFO - Epoch(val) [252][18/18]  accuracy/top1: 88.2867
2023/02/05 14:18:24 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:18:26 - mmengine - INFO - Epoch(val) [253][18/18]  accuracy/top1: 88.2867
2023/02/05 14:18:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:19:00 - mmengine - INFO - Epoch(val) [254][18/18]  accuracy/top1: 85.8392
2023/02/05 14:19:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:19:34 - mmengine - INFO - Epoch(val) [255][18/18]  accuracy/top1: 88.9860
2023/02/05 14:20:05 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:20:08 - mmengine - INFO - Epoch(val) [256][18/18]  accuracy/top1: 88.1119
2023/02/05 14:20:39 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:20:41 - mmengine - INFO - Epoch(val) [257][18/18]  accuracy/top1: 88.4615
2023/02/05 14:21:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:21:15 - mmengine - INFO - Epoch(val) [258][18/18]  accuracy/top1: 87.9371
2023/02/05 14:21:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:21:48 - mmengine - INFO - Epoch(val) [259][18/18]  accuracy/top1: 87.0629
2023/02/05 14:22:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:22:19 - mmengine - INFO - Saving checkpoint at 260 epochs
2023/02/05 14:22:26 - mmengine - INFO - Epoch(val) [260][18/18]  accuracy/top1: 86.8881
2023/02/05 14:22:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:22:59 - mmengine - INFO - Epoch(val) [261][18/18]  accuracy/top1: 89.5105
2023/02/05 14:23:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:23:33 - mmengine - INFO - Epoch(val) [262][18/18]  accuracy/top1: 85.8392
2023/02/05 14:24:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:24:06 - mmengine - INFO - Epoch(val) [263][18/18]  accuracy/top1: 88.6364
2023/02/05 14:24:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:24:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:24:41 - mmengine - INFO - Epoch(val) [264][18/18]  accuracy/top1: 89.3357
2023/02/05 14:25:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:25:14 - mmengine - INFO - Epoch(val) [265][18/18]  accuracy/top1: 88.4615
2023/02/05 14:25:45 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:25:48 - mmengine - INFO - Epoch(val) [266][18/18]  accuracy/top1: 90.3846
2023/02/05 14:26:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:26:21 - mmengine - INFO - Epoch(val) [267][18/18]  accuracy/top1: 89.8601
2023/02/05 14:26:52 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:26:54 - mmengine - INFO - Epoch(val) [268][18/18]  accuracy/top1: 85.6643
2023/02/05 14:27:25 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:27:28 - mmengine - INFO - Epoch(val) [269][18/18]  accuracy/top1: 88.2867
2023/02/05 14:27:59 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:28:01 - mmengine - INFO - Epoch(val) [270][18/18]  accuracy/top1: 89.1608
2023/02/05 14:28:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:28:36 - mmengine - INFO - Epoch(val) [271][18/18]  accuracy/top1: 88.6364
2023/02/05 14:29:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:29:09 - mmengine - INFO - Epoch(val) [272][18/18]  accuracy/top1: 88.2867
2023/02/05 14:29:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:29:43 - mmengine - INFO - Epoch(val) [273][18/18]  accuracy/top1: 87.7622
2023/02/05 14:30:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:30:16 - mmengine - INFO - Epoch(val) [274][18/18]  accuracy/top1: 89.8601
2023/02/05 14:30:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:30:50 - mmengine - INFO - Epoch(val) [275][18/18]  accuracy/top1: 88.2867
2023/02/05 14:31:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:31:23 - mmengine - INFO - Epoch(val) [276][18/18]  accuracy/top1: 87.4126
2023/02/05 14:31:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:31:57 - mmengine - INFO - Epoch(val) [277][18/18]  accuracy/top1: 89.5105
2023/02/05 14:32:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:32:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:32:30 - mmengine - INFO - Epoch(val) [278][18/18]  accuracy/top1: 88.2867
2023/02/05 14:33:01 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:33:03 - mmengine - INFO - Epoch(val) [279][18/18]  accuracy/top1: 86.7133
2023/02/05 14:33:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:33:34 - mmengine - INFO - Saving checkpoint at 280 epochs
2023/02/05 14:33:41 - mmengine - INFO - Epoch(val) [280][18/18]  accuracy/top1: 88.9860
2023/02/05 14:34:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:34:15 - mmengine - INFO - Epoch(val) [281][18/18]  accuracy/top1: 87.4126
2023/02/05 14:34:45 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:34:48 - mmengine - INFO - Epoch(val) [282][18/18]  accuracy/top1: 88.6364
2023/02/05 14:35:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:35:22 - mmengine - INFO - Epoch(val) [283][18/18]  accuracy/top1: 87.4126
2023/02/05 14:35:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:35:55 - mmengine - INFO - Epoch(val) [284][18/18]  accuracy/top1: 88.4615
2023/02/05 14:36:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:36:29 - mmengine - INFO - Epoch(val) [285][18/18]  accuracy/top1: 88.8112
2023/02/05 14:37:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:37:02 - mmengine - INFO - Epoch(val) [286][18/18]  accuracy/top1: 90.5594
2023/02/05 14:37:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:37:36 - mmengine - INFO - Epoch(val) [287][18/18]  accuracy/top1: 90.2098
2023/02/05 14:38:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:38:09 - mmengine - INFO - Epoch(val) [288][18/18]  accuracy/top1: 89.3357
2023/02/05 14:38:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:38:43 - mmengine - INFO - Epoch(val) [289][18/18]  accuracy/top1: 86.3636
2023/02/05 14:39:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:39:18 - mmengine - INFO - Epoch(val) [290][18/18]  accuracy/top1: 89.5105
2023/02/05 14:39:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:39:51 - mmengine - INFO - Epoch(val) [291][18/18]  accuracy/top1: 90.5594
2023/02/05 14:40:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:40:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:40:24 - mmengine - INFO - Epoch(val) [292][18/18]  accuracy/top1: 88.9860
2023/02/05 14:40:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:40:58 - mmengine - INFO - Epoch(val) [293][18/18]  accuracy/top1: 87.4126
2023/02/05 14:41:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:41:31 - mmengine - INFO - Epoch(val) [294][18/18]  accuracy/top1: 84.4406
2023/02/05 14:42:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:42:05 - mmengine - INFO - Epoch(val) [295][18/18]  accuracy/top1: 87.5874
2023/02/05 14:42:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:42:39 - mmengine - INFO - Epoch(val) [296][18/18]  accuracy/top1: 88.4615
2023/02/05 14:43:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:43:12 - mmengine - INFO - Epoch(val) [297][18/18]  accuracy/top1: 87.9371
2023/02/05 14:43:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:43:46 - mmengine - INFO - Epoch(val) [298][18/18]  accuracy/top1: 88.9860
2023/02/05 14:44:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:44:19 - mmengine - INFO - Epoch(val) [299][18/18]  accuracy/top1: 90.2098
2023/02/05 14:44:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:44:50 - mmengine - INFO - Saving checkpoint at 300 epochs
2023/02/05 14:44:58 - mmengine - INFO - Epoch(val) [300][18/18]  accuracy/top1: 89.5105
2023/02/05 14:45:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:45:31 - mmengine - INFO - Epoch(val) [301][18/18]  accuracy/top1: 90.3846
2023/02/05 14:46:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:46:04 - mmengine - INFO - Epoch(val) [302][18/18]  accuracy/top1: 87.2378
2023/02/05 14:46:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:46:39 - mmengine - INFO - Epoch(val) [303][18/18]  accuracy/top1: 89.5105
2023/02/05 14:47:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:47:12 - mmengine - INFO - Epoch(val) [304][18/18]  accuracy/top1: 87.7622
2023/02/05 14:47:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:47:46 - mmengine - INFO - Epoch(val) [305][18/18]  accuracy/top1: 88.6364
2023/02/05 14:48:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:48:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:48:19 - mmengine - INFO - Epoch(val) [306][18/18]  accuracy/top1: 88.4615
2023/02/05 14:48:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:48:52 - mmengine - INFO - Epoch(val) [307][18/18]  accuracy/top1: 89.6853
2023/02/05 14:49:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:49:26 - mmengine - INFO - Epoch(val) [308][18/18]  accuracy/top1: 91.2587
2023/02/05 14:49:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:49:59 - mmengine - INFO - Epoch(val) [309][18/18]  accuracy/top1: 88.6364
2023/02/05 14:50:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:50:33 - mmengine - INFO - Epoch(val) [310][18/18]  accuracy/top1: 90.2098
2023/02/05 14:51:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:51:06 - mmengine - INFO - Epoch(val) [311][18/18]  accuracy/top1: 89.5105
2023/02/05 14:51:37 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:51:39 - mmengine - INFO - Epoch(val) [312][18/18]  accuracy/top1: 88.2867
2023/02/05 14:52:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:52:13 - mmengine - INFO - Epoch(val) [313][18/18]  accuracy/top1: 88.9860
2023/02/05 14:52:44 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:52:46 - mmengine - INFO - Epoch(val) [314][18/18]  accuracy/top1: 90.0350
2023/02/05 14:53:17 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:53:20 - mmengine - INFO - Epoch(val) [315][18/18]  accuracy/top1: 87.0629
2023/02/05 14:53:51 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:53:53 - mmengine - INFO - Epoch(val) [316][18/18]  accuracy/top1: 86.5385
2023/02/05 14:54:24 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:54:27 - mmengine - INFO - Epoch(val) [317][18/18]  accuracy/top1: 90.7343
2023/02/05 14:54:58 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:55:00 - mmengine - INFO - Epoch(val) [318][18/18]  accuracy/top1: 89.5105
2023/02/05 14:55:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:55:34 - mmengine - INFO - Epoch(val) [319][18/18]  accuracy/top1: 89.6853
2023/02/05 14:55:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:56:05 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:56:05 - mmengine - INFO - Saving checkpoint at 320 epochs
2023/02/05 14:56:12 - mmengine - INFO - Epoch(val) [320][18/18]  accuracy/top1: 89.8601
2023/02/05 14:56:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:56:45 - mmengine - INFO - Epoch(val) [321][18/18]  accuracy/top1: 89.6853
2023/02/05 14:57:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:57:19 - mmengine - INFO - Epoch(val) [322][18/18]  accuracy/top1: 89.6853
2023/02/05 14:57:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:57:52 - mmengine - INFO - Epoch(val) [323][18/18]  accuracy/top1: 89.5105
2023/02/05 14:58:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:58:26 - mmengine - INFO - Epoch(val) [324][18/18]  accuracy/top1: 91.0839
2023/02/05 14:58:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:58:59 - mmengine - INFO - Epoch(val) [325][18/18]  accuracy/top1: 90.7343
2023/02/05 14:59:30 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 14:59:33 - mmengine - INFO - Epoch(val) [326][18/18]  accuracy/top1: 91.6084
2023/02/05 15:00:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:00:07 - mmengine - INFO - Epoch(val) [327][18/18]  accuracy/top1: 90.9091
2023/02/05 15:00:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:00:40 - mmengine - INFO - Epoch(val) [328][18/18]  accuracy/top1: 88.2867
2023/02/05 15:01:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:01:15 - mmengine - INFO - Epoch(val) [329][18/18]  accuracy/top1: 90.2098
2023/02/05 15:01:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:01:48 - mmengine - INFO - Epoch(val) [330][18/18]  accuracy/top1: 89.6853
2023/02/05 15:02:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:02:22 - mmengine - INFO - Epoch(val) [331][18/18]  accuracy/top1: 89.3357
2023/02/05 15:02:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:02:56 - mmengine - INFO - Epoch(val) [332][18/18]  accuracy/top1: 88.6364
2023/02/05 15:03:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:03:29 - mmengine - INFO - Epoch(val) [333][18/18]  accuracy/top1: 89.5105
2023/02/05 15:03:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:04:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:04:03 - mmengine - INFO - Epoch(val) [334][18/18]  accuracy/top1: 88.9860
2023/02/05 15:04:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:04:37 - mmengine - INFO - Epoch(val) [335][18/18]  accuracy/top1: 89.5105
2023/02/05 15:05:08 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:05:10 - mmengine - INFO - Epoch(val) [336][18/18]  accuracy/top1: 89.8601
2023/02/05 15:05:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:05:43 - mmengine - INFO - Epoch(val) [337][18/18]  accuracy/top1: 88.2867
2023/02/05 15:06:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:06:17 - mmengine - INFO - Epoch(val) [338][18/18]  accuracy/top1: 88.1119
2023/02/05 15:06:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:06:50 - mmengine - INFO - Epoch(val) [339][18/18]  accuracy/top1: 89.3357
2023/02/05 15:07:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:07:21 - mmengine - INFO - Saving checkpoint at 340 epochs
2023/02/05 15:07:28 - mmengine - INFO - Epoch(val) [340][18/18]  accuracy/top1: 89.3357
2023/02/05 15:07:59 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:08:02 - mmengine - INFO - Epoch(val) [341][18/18]  accuracy/top1: 89.3357
2023/02/05 15:08:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:08:36 - mmengine - INFO - Epoch(val) [342][18/18]  accuracy/top1: 89.6853
2023/02/05 15:09:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:09:09 - mmengine - INFO - Epoch(val) [343][18/18]  accuracy/top1: 89.3357
2023/02/05 15:09:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:09:42 - mmengine - INFO - Epoch(val) [344][18/18]  accuracy/top1: 90.2098
2023/02/05 15:10:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:10:16 - mmengine - INFO - Epoch(val) [345][18/18]  accuracy/top1: 91.4336
2023/02/05 15:10:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:10:50 - mmengine - INFO - Epoch(val) [346][18/18]  accuracy/top1: 87.9371
2023/02/05 15:11:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:11:24 - mmengine - INFO - Epoch(val) [347][18/18]  accuracy/top1: 91.7832
2023/02/05 15:11:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:11:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:11:57 - mmengine - INFO - Epoch(val) [348][18/18]  accuracy/top1: 90.2098
2023/02/05 15:12:28 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:12:31 - mmengine - INFO - Epoch(val) [349][18/18]  accuracy/top1: 90.0350
2023/02/05 15:13:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:13:04 - mmengine - INFO - Epoch(val) [350][18/18]  accuracy/top1: 90.3846
2023/02/05 15:13:35 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:13:37 - mmengine - INFO - Epoch(val) [351][18/18]  accuracy/top1: 91.6084
2023/02/05 15:14:09 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:14:11 - mmengine - INFO - Epoch(val) [352][18/18]  accuracy/top1: 91.2587
2023/02/05 15:14:43 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:14:45 - mmengine - INFO - Epoch(val) [353][18/18]  accuracy/top1: 91.0839
2023/02/05 15:15:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:15:19 - mmengine - INFO - Epoch(val) [354][18/18]  accuracy/top1: 90.2098
2023/02/05 15:15:50 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:15:52 - mmengine - INFO - Epoch(val) [355][18/18]  accuracy/top1: 89.8601
2023/02/05 15:16:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:16:26 - mmengine - INFO - Epoch(val) [356][18/18]  accuracy/top1: 88.2867
2023/02/05 15:16:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:16:59 - mmengine - INFO - Epoch(val) [357][18/18]  accuracy/top1: 90.0350
2023/02/05 15:17:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:17:33 - mmengine - INFO - Epoch(val) [358][18/18]  accuracy/top1: 90.5594
2023/02/05 15:18:04 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:18:07 - mmengine - INFO - Epoch(val) [359][18/18]  accuracy/top1: 89.8601
2023/02/05 15:18:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:18:38 - mmengine - INFO - Saving checkpoint at 360 epochs
2023/02/05 15:18:44 - mmengine - INFO - Epoch(val) [360][18/18]  accuracy/top1: 90.2098
2023/02/05 15:19:16 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:19:18 - mmengine - INFO - Epoch(val) [361][18/18]  accuracy/top1: 89.1608
2023/02/05 15:19:22 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:19:49 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:19:52 - mmengine - INFO - Epoch(val) [362][18/18]  accuracy/top1: 88.6364
2023/02/05 15:20:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:20:25 - mmengine - INFO - Epoch(val) [363][18/18]  accuracy/top1: 88.9860
2023/02/05 15:20:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:21:00 - mmengine - INFO - Epoch(val) [364][18/18]  accuracy/top1: 92.1329
2023/02/05 15:21:31 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:21:34 - mmengine - INFO - Epoch(val) [365][18/18]  accuracy/top1: 90.5594
2023/02/05 15:22:05 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:22:07 - mmengine - INFO - Epoch(val) [366][18/18]  accuracy/top1: 88.9860
2023/02/05 15:22:38 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:22:41 - mmengine - INFO - Epoch(val) [367][18/18]  accuracy/top1: 90.9091
2023/02/05 15:23:12 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:23:15 - mmengine - INFO - Epoch(val) [368][18/18]  accuracy/top1: 90.7343
2023/02/05 15:23:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:23:48 - mmengine - INFO - Epoch(val) [369][18/18]  accuracy/top1: 91.9580
2023/02/05 15:24:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:24:22 - mmengine - INFO - Epoch(val) [370][18/18]  accuracy/top1: 90.7343
2023/02/05 15:24:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:24:55 - mmengine - INFO - Epoch(val) [371][18/18]  accuracy/top1: 91.4336
2023/02/05 15:25:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:25:28 - mmengine - INFO - Epoch(val) [372][18/18]  accuracy/top1: 90.7343
2023/02/05 15:25:59 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:26:02 - mmengine - INFO - Epoch(val) [373][18/18]  accuracy/top1: 90.3846
2023/02/05 15:26:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:26:36 - mmengine - INFO - Epoch(val) [374][18/18]  accuracy/top1: 90.0350
2023/02/05 15:27:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:27:09 - mmengine - INFO - Epoch(val) [375][18/18]  accuracy/top1: 90.9091
2023/02/05 15:27:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:27:43 - mmengine - INFO - Epoch(val) [376][18/18]  accuracy/top1: 90.7343
2023/02/05 15:28:14 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:28:17 - mmengine - INFO - Epoch(val) [377][18/18]  accuracy/top1: 90.5594
2023/02/05 15:28:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:28:50 - mmengine - INFO - Epoch(val) [378][18/18]  accuracy/top1: 90.9091
2023/02/05 15:29:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:29:23 - mmengine - INFO - Epoch(val) [379][18/18]  accuracy/top1: 90.7343
2023/02/05 15:29:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:29:54 - mmengine - INFO - Saving checkpoint at 380 epochs
2023/02/05 15:30:02 - mmengine - INFO - Epoch(val) [380][18/18]  accuracy/top1: 91.0839
2023/02/05 15:30:32 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:30:35 - mmengine - INFO - Epoch(val) [381][18/18]  accuracy/top1: 90.2098
2023/02/05 15:31:06 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:31:08 - mmengine - INFO - Epoch(val) [382][18/18]  accuracy/top1: 90.3846
2023/02/05 15:31:39 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:31:42 - mmengine - INFO - Epoch(val) [383][18/18]  accuracy/top1: 91.6084
2023/02/05 15:32:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:32:15 - mmengine - INFO - Epoch(val) [384][18/18]  accuracy/top1: 92.4825
2023/02/05 15:32:46 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:32:48 - mmengine - INFO - Epoch(val) [385][18/18]  accuracy/top1: 91.6084
2023/02/05 15:33:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:33:22 - mmengine - INFO - Epoch(val) [386][18/18]  accuracy/top1: 90.0350
2023/02/05 15:33:53 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:33:56 - mmengine - INFO - Epoch(val) [387][18/18]  accuracy/top1: 90.9091
2023/02/05 15:34:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:34:29 - mmengine - INFO - Epoch(val) [388][18/18]  accuracy/top1: 89.8601
2023/02/05 15:34:57 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:35:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:35:02 - mmengine - INFO - Epoch(val) [389][18/18]  accuracy/top1: 90.3846
2023/02/05 15:35:33 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:35:36 - mmengine - INFO - Epoch(val) [390][18/18]  accuracy/top1: 91.6084
2023/02/05 15:36:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:36:09 - mmengine - INFO - Epoch(val) [391][18/18]  accuracy/top1: 91.7832
2023/02/05 15:36:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:36:43 - mmengine - INFO - Epoch(val) [392][18/18]  accuracy/top1: 90.5594
2023/02/05 15:37:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:37:16 - mmengine - INFO - Epoch(val) [393][18/18]  accuracy/top1: 89.8601
2023/02/05 15:37:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:37:49 - mmengine - INFO - Epoch(val) [394][18/18]  accuracy/top1: 91.6084
2023/02/05 15:38:19 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:38:21 - mmengine - INFO - Epoch(val) [395][18/18]  accuracy/top1: 91.6084
2023/02/05 15:38:51 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:38:54 - mmengine - INFO - Epoch(val) [396][18/18]  accuracy/top1: 91.0839
2023/02/05 15:39:23 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:39:26 - mmengine - INFO - Epoch(val) [397][18/18]  accuracy/top1: 89.3357
2023/02/05 15:39:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:39:58 - mmengine - INFO - Epoch(val) [398][18/18]  accuracy/top1: 91.0839
2023/02/05 15:40:28 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:40:30 - mmengine - INFO - Epoch(val) [399][18/18]  accuracy/top1: 91.4336
2023/02/05 15:41:02 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:41:02 - mmengine - INFO - Saving checkpoint at 400 epochs
2023/02/05 15:41:09 - mmengine - INFO - Epoch(val) [400][18/18]  accuracy/top1: 91.4336
2023/02/05 15:41:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:41:42 - mmengine - INFO - Epoch(val) [401][18/18]  accuracy/top1: 90.5594
2023/02/05 15:42:13 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:42:16 - mmengine - INFO - Epoch(val) [402][18/18]  accuracy/top1: 90.2098
2023/02/05 15:42:40 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:42:47 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:42:49 - mmengine - INFO - Epoch(val) [403][18/18]  accuracy/top1: 91.6084
2023/02/05 15:43:20 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:43:23 - mmengine - INFO - Epoch(val) [404][18/18]  accuracy/top1: 89.1608
2023/02/05 15:43:54 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:43:56 - mmengine - INFO - Epoch(val) [405][18/18]  accuracy/top1: 91.0839
2023/02/05 15:44:27 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:44:29 - mmengine - INFO - Epoch(val) [406][18/18]  accuracy/top1: 92.3077
2023/02/05 15:45:00 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:45:03 - mmengine - INFO - Epoch(val) [407][18/18]  accuracy/top1: 93.0070
2023/02/05 15:45:34 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:45:36 - mmengine - INFO - Epoch(val) [408][18/18]  accuracy/top1: 90.0350
2023/02/05 15:46:07 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:46:10 - mmengine - INFO - Epoch(val) [409][18/18]  accuracy/top1: 91.6084
2023/02/05 15:46:41 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:46:43 - mmengine - INFO - Epoch(val) [410][18/18]  accuracy/top1: 91.7832
2023/02/05 15:47:15 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:47:17 - mmengine - INFO - Epoch(val) [411][18/18]  accuracy/top1: 91.6084
2023/02/05 15:47:48 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:47:50 - mmengine - INFO - Epoch(val) [412][18/18]  accuracy/top1: 90.7343
2023/02/05 15:48:21 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:48:24 - mmengine - INFO - Epoch(val) [413][18/18]  accuracy/top1: 90.5594
2023/02/05 15:48:55 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:48:58 - mmengine - INFO - Epoch(val) [414][18/18]  accuracy/top1: 93.3566
2023/02/05 15:49:29 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:49:31 - mmengine - INFO - Epoch(val) [415][18/18]  accuracy/top1: 91.9580
2023/02/05 15:50:03 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:50:05 - mmengine - INFO - Epoch(val) [416][18/18]  accuracy/top1: 91.0839
2023/02/05 15:50:26 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:50:36 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:50:39 - mmengine - INFO - Epoch(val) [417][18/18]  accuracy/top1: 92.4825
2023/02/05 15:51:10 - mmengine - INFO - Exp name: convnext-base_32xb128_flower_20230205_115555
2023/02/05 15:51:12 - mmengine - INFO - Epoch(val) [418][18/18]  accuracy/top1: 92.8322
